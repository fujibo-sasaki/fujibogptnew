"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("puppeteer");;

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node:https");

/***/ }),

/***/ "node:os":
/*!**************************!*\
  !*** external "node:os" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:os");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:zlib");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_okamotonobuhiro_fujibo2025_test_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/chat/route.ts */ \"(rsc)/./app/api/chat/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_okamotonobuhiro_fujibo2025_test_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__]);\n_Users_okamotonobuhiro_fujibo2025_test_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"/Users/okamotonobuhiro/fujibo2025/test/src/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_okamotonobuhiro_fujibo2025_test_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/chat/route\";\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm9rYW1vdG9ub2J1aGlybyUyRmZ1amlibzIwMjUlMkZ0ZXN0JTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm9rYW1vdG9ub2J1aGlybyUyRmZ1amlibzIwMjUlMkZ0ZXN0JTJGc3JjJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDOEI7QUFDN0Y7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKLHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXp1cmUtb3Blbi1haS1hY2NlbGVyYXRvci8/ZmU0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvb2thbW90b25vYnVoaXJvL2Z1amlibzIwMjUvdGVzdC9zcmMvYXBwL2FwaS9jaGF0L3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY2hhdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NoYXRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NoYXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvb2thbW90b25vYnVoaXJvL2Z1amlibzIwMjUvdGVzdC9zcmMvYXBwL2FwaS9jaGF0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2NoYXQvcm91dGVcIjtcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/chat/route.ts":
/*!*******************************!*\
  !*** ./app/api/chat/route.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _features_chat_chat_services_chat_api_entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/features/chat/chat-services/chat-api-entry */ \"(rsc)/./features/chat/chat-services/chat-api-entry.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_features_chat_chat_services_chat_api_entry__WEBPACK_IMPORTED_MODULE_0__]);\n_features_chat_chat_services_chat_api_entry__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function POST(req) {\n    const body = await req.json();\n    return await (0,_features_chat_chat_services_chat_api_entry__WEBPACK_IMPORTED_MODULE_0__.chatAPIEntry)(body);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2NoYXQvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEU7QUFFckUsZUFBZUMsS0FBS0MsR0FBWTtJQUNyQyxNQUFNQyxPQUFPLE1BQU1ELElBQUlFLElBQUk7SUFDM0IsT0FBTyxNQUFNSix5RkFBWUEsQ0FBQ0c7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9henVyZS1vcGVuLWFpLWFjY2VsZXJhdG9yLy4vYXBwL2FwaS9jaGF0L3JvdXRlLnRzP2RlNDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2hhdEFQSUVudHJ5IH0gZnJvbSBcIkAvZmVhdHVyZXMvY2hhdC9jaGF0LXNlcnZpY2VzL2NoYXQtYXBpLWVudHJ5XCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogUmVxdWVzdCkge1xuICBjb25zdCBib2R5ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgcmV0dXJuIGF3YWl0IGNoYXRBUElFbnRyeShib2R5KTtcbn1cbiJdLCJuYW1lcyI6WyJjaGF0QVBJRW50cnkiLCJQT1NUIiwicmVxIiwiYm9keSIsImpzb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./features/auth/auth-api.ts":
/*!***********************************!*\
  !*** ./features/auth/auth-api.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: () => (/* binding */ handlers),\n/* harmony export */   options: () => (/* binding */ options)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_azure_ad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/azure-ad */ \"(rsc)/./node_modules/next-auth/providers/azure-ad.js\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/github */ \"(rsc)/./node_modules/next-auth/providers/github.js\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers */ \"(rsc)/./features/auth/helpers.ts\");\n\n\n\n\n\nconst configureIdentityProvider = ()=>{\n    const providers = [];\n    const adminEmails = process.env.ADMIN_EMAIL_ADDRESS?.split(\",\").map((email)=>email.toLowerCase().trim());\n    if (process.env.AUTH_GITHUB_ID && process.env.AUTH_GITHUB_SECRET) {\n        providers.push((0,next_auth_providers_github__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            clientId: process.env.AUTH_GITHUB_ID,\n            clientSecret: process.env.AUTH_GITHUB_SECRET,\n            async profile (profile) {\n                const newProfile = {\n                    ...profile,\n                    isAdmin: adminEmails?.includes(profile.email.toLowerCase())\n                };\n                return newProfile;\n            }\n        }));\n    }\n    if (process.env.AZURE_AD_CLIENT_ID && process.env.AZURE_AD_CLIENT_SECRET && process.env.AZURE_AD_TENANT_ID) {\n        providers.push((0,next_auth_providers_azure_ad__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            clientId: process.env.AZURE_AD_CLIENT_ID,\n            clientSecret: process.env.AZURE_AD_CLIENT_SECRET,\n            tenantId: process.env.AZURE_AD_TENANT_ID,\n            async profile (profile) {\n                const newProfile = {\n                    ...profile,\n                    // throws error without this - unsure of the root cause (https://stackoverflow.com/questions/76244244/profile-id-is-missing-in-google-oauth-profile-response-nextauth)\n                    id: profile.sub,\n                    //isAdmin: adminEmails?.includes(profile.email.toLowerCase()) || adminEmails?.includes(profile.preferred_username.toLowerCase())\n                    isAdmin: adminEmails?.includes(profile.preferred_username.toLowerCase())\n                };\n                return newProfile;\n            }\n        }));\n    }\n    // If we're in local dev, add a basic credential provider option as well\n    // (Useful when a dev doesn't have access to create app registration in their tenant)\n    // This currently takes any username and makes a user with it, ignores password\n    // Refer to: https://next-auth.js.org/configuration/providers/credentials\n    if (true) {\n        providers.push((0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            name: \"localdev\",\n            credentials: {\n                username: {\n                    label: \"Username\",\n                    type: \"text\",\n                    placeholder: \"dev\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials, req) {\n                // You can put logic here to validate the credentials and return a user.\n                // We're going to take any username and make a new user with it\n                // Create the id as the hash of the email as per userHashedId (helpers.ts)\n                const username = credentials?.username || \"dev\";\n                const email = username + \"@localhost\";\n                const user = {\n                    id: (0,_helpers__WEBPACK_IMPORTED_MODULE_4__.hashValue)(email),\n                    name: username,\n                    email: email,\n                    isAdmin: true,\n                    image: \"\"\n                };\n                console.log(\"=== DEV USER LOGGED IN:\\n\", JSON.stringify(user, null, 2));\n                return user;\n            }\n        }));\n    }\n    return providers;\n};\nconst options = {\n    secret: process.env.NEXTAUTH_SECRET,\n    providers: [\n        ...configureIdentityProvider()\n    ],\n    callbacks: {\n        async jwt ({ token, user, account, profile, isNewUser, session }) {\n            if (user?.isAdmin) {\n                token.isAdmin = user.isAdmin;\n            }\n            return token;\n        },\n        async session ({ session, token, user }) {\n            session.user.isAdmin = token.isAdmin;\n            return session;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    }\n};\nconst handlers = next_auth__WEBPACK_IMPORTED_MODULE_0___default()(options);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/auth/auth-api.ts\n");

/***/ }),

/***/ "(rsc)/./features/auth/helpers.ts":
/*!**********************************!*\
  !*** ./features/auth/helpers.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashValue: () => (/* binding */ hashValue),\n/* harmony export */   userHashedId: () => (/* binding */ userHashedId),\n/* harmony export */   userSession: () => (/* binding */ userSession)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-api */ \"(rsc)/./features/auth/auth-api.ts\");\n\n\n\nconst userSession = async ()=>{\n    const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_auth_api__WEBPACK_IMPORTED_MODULE_2__.options);\n    if (session && session.user) {\n        return session.user;\n    }\n    return null;\n};\nconst userHashedId = async ()=>{\n    const user = await userSession();\n    if (user) {\n        return hashValue(user.email);\n    }\n    throw new Error(\"User not found\");\n};\nconst hashValue = (value)=>{\n    const hash = (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(\"sha256\");\n    hash.update(value);\n    return hash.digest(\"hex\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9hdXRoL2hlbHBlcnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0M7QUFDUztBQUNSO0FBRTlCLE1BQU1HLGNBQWM7SUFDekIsTUFBTUMsVUFBVSxNQUFNSCwyREFBZ0JBLENBQUNDLDhDQUFPQTtJQUM5QyxJQUFJRSxXQUFXQSxRQUFRQyxJQUFJLEVBQUU7UUFDM0IsT0FBT0QsUUFBUUMsSUFBSTtJQUNyQjtJQUVBLE9BQU87QUFDVCxFQUFFO0FBRUssTUFBTUMsZUFBZTtJQUMxQixNQUFNRCxPQUFPLE1BQU1GO0lBQ25CLElBQUlFLE1BQU07UUFDUixPQUFPRSxVQUFVRixLQUFLRyxLQUFLO0lBQzdCO0lBRUEsTUFBTSxJQUFJQyxNQUFNO0FBQ2xCLEVBQUU7QUFRSyxNQUFNRixZQUFZLENBQUNHO0lBQ3hCLE1BQU1DLE9BQU9YLGtEQUFVQSxDQUFDO0lBQ3hCVyxLQUFLQyxNQUFNLENBQUNGO0lBQ1osT0FBT0MsS0FBS0UsTUFBTSxDQUFDO0FBQ3JCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9henVyZS1vcGVuLWFpLWFjY2VsZXJhdG9yLy4vZmVhdHVyZXMvYXV0aC9oZWxwZXJzLnRzPzdlYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlSGFzaCB9IGZyb20gXCJjcnlwdG9cIjtcbmltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tIFwibmV4dC1hdXRoXCI7XG5pbXBvcnQgeyBvcHRpb25zIH0gZnJvbSBcIi4vYXV0aC1hcGlcIjtcblxuZXhwb3J0IGNvbnN0IHVzZXJTZXNzaW9uID0gYXN5bmMgKCk6IFByb21pc2U8VXNlck1vZGVsIHwgbnVsbD4gPT4ge1xuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbihvcHRpb25zKTtcbiAgaWYgKHNlc3Npb24gJiYgc2Vzc2lvbi51c2VyKSB7XG4gICAgcmV0dXJuIHNlc3Npb24udXNlciBhcyBVc2VyTW9kZWw7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VySGFzaGVkSWQgPSBhc3luYyAoKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgY29uc3QgdXNlciA9IGF3YWl0IHVzZXJTZXNzaW9uKCk7XG4gIGlmICh1c2VyKSB7XG4gICAgcmV0dXJuIGhhc2hWYWx1ZSh1c2VyLmVtYWlsKTtcbiAgfVxuXG4gIHRocm93IG5ldyBFcnJvcihcIlVzZXIgbm90IGZvdW5kXCIpO1xufTtcblxuZXhwb3J0IHR5cGUgVXNlck1vZGVsID0ge1xuICBuYW1lOiBzdHJpbmc7XG4gIGltYWdlOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgY29uc3QgaGFzaFZhbHVlID0gKHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBoYXNoID0gY3JlYXRlSGFzaChcInNoYTI1NlwiKTtcbiAgaGFzaC51cGRhdGUodmFsdWUpO1xuICByZXR1cm4gaGFzaC5kaWdlc3QoXCJoZXhcIik7XG59O1xuIl0sIm5hbWVzIjpbImNyZWF0ZUhhc2giLCJnZXRTZXJ2ZXJTZXNzaW9uIiwib3B0aW9ucyIsInVzZXJTZXNzaW9uIiwic2Vzc2lvbiIsInVzZXIiLCJ1c2VySGFzaGVkSWQiLCJoYXNoVmFsdWUiLCJlbWFpbCIsIkVycm9yIiwidmFsdWUiLCJoYXNoIiwidXBkYXRlIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./features/auth/helpers.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/Azure-bing-search/bing.ts":
/*!***************************************************************!*\
  !*** ./features/chat/chat-services/Azure-bing-search/bing.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BingSearchResult: () => (/* binding */ BingSearchResult)\n/* harmony export */ });\nclass BingSearchResult {\n    async SearchWeb(searchText) {\n        var url = \"https://api.bing.microsoft.com/v7.0/search?count=10&offset=0&responseFilter=Webpages&setLang=ja-jp&q=\";\n        url = url + searchText;\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Ocp-Apim-Subscription-Key\": process.env.AZURE_BINGSEARCH_API_KEY\n                }\n            });\n            return await response.json();\n        //const postsData = await response.json();\n        } catch (err) {\n            console.error(err);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvQXp1cmUtYmluZy1zZWFyY2gvYmluZy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7SUFDWCxNQUFPQyxVQUFVQyxVQUFrQixFQUFHO1FBQ3BDLElBQUlDLE1BQWdCO1FBQ3BCQSxNQUFNQSxNQUFNRDtRQUNaLElBQUk7WUFDRixNQUFNRSxXQUFXLE1BQU1DLE1BQU1GLEtBQUs7Z0JBQ2hDRyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtvQkFDaEIsNkJBQTZCQyxRQUFRQyxHQUFHLENBQUNDLHdCQUF3QjtnQkFDakU7WUFBQztZQUNMLE9BQU8sTUFBTU4sU0FBU08sSUFBSTtRQUMxQiwwQ0FBMEM7UUFDNUMsRUFBRSxPQUFPQyxLQUFLO1lBQ1pDLFFBQVFDLEtBQUssQ0FBQ0Y7UUFDaEI7SUFFRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXp1cmUtb3Blbi1haS1hY2NlbGVyYXRvci8uL2ZlYXR1cmVzL2NoYXQvY2hhdC1zZXJ2aWNlcy9BenVyZS1iaW5nLXNlYXJjaC9iaW5nLnRzP2QxOTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEJpbmdTZWFyY2hSZXN1bHQge1xuICBhc3luYyAgU2VhcmNoV2ViKHNlYXJjaFRleHQ6IHN0cmluZykgIHtcbiAgICB2YXIgdXJsIDogc3RyaW5nICA9IFwiaHR0cHM6Ly9hcGkuYmluZy5taWNyb3NvZnQuY29tL3Y3LjAvc2VhcmNoP2NvdW50PTEwJm9mZnNldD0wJnJlc3BvbnNlRmlsdGVyPVdlYnBhZ2VzJnNldExhbmc9amEtanAmcT1cIjtcbiAgICB1cmwgPSB1cmwgKyBzZWFyY2hUZXh0O1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAnT2NwLUFwaW0tU3Vic2NyaXB0aW9uLUtleSc6IHByb2Nlc3MuZW52LkFaVVJFX0JJTkdTRUFSQ0hfQVBJX0tFWVxuICAgICAgICAgIH19KTtcbiAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAvL2NvbnN0IHBvc3RzRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICB9XG4gIFxuICB9IFxufVxuIl0sIm5hbWVzIjpbIkJpbmdTZWFyY2hSZXN1bHQiLCJTZWFyY2hXZWIiLCJzZWFyY2hUZXh0IiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJwcm9jZXNzIiwiZW52IiwiQVpVUkVfQklOR1NFQVJDSF9BUElfS0VZIiwianNvbiIsImVyciIsImNvbnNvbGUiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/Azure-bing-search/bing.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/azure-cog-search/azure-cog-vector-store.ts":
/*!********************************************************************************!*\
  !*** ./features/chat/chat-services/azure-cog-search/azure-cog-vector-store.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteDocuments: () => (/* binding */ deleteDocuments),\n/* harmony export */   embedDocuments: () => (/* binding */ embedDocuments),\n/* harmony export */   ensureIndexIsCreated: () => (/* binding */ ensureIndexIsCreated),\n/* harmony export */   indexDocuments: () => (/* binding */ indexDocuments),\n/* harmony export */   similaritySearchVectorWithScore: () => (/* binding */ similaritySearchVectorWithScore),\n/* harmony export */   simpleSearch: () => (/* binding */ simpleSearch)\n/* harmony export */ });\n/* harmony import */ var _features_common_openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/features/common/openai */ \"(rsc)/./features/common/openai.ts\");\n\nconst simpleSearch = async (filter)=>{\n    const url = `${baseIndexUrl()}/docs/search?api-version=${process.env.AZURE_SEARCH_API_VERSION}`;\n    const searchBody = {\n        search: filter?.search || \"*\",\n        facets: filter?.facets || [],\n        filter: filter?.filter || \"\",\n        vectors: [],\n        top: filter?.top || 10\n    };\n    const resultDocuments = await fetcher(url, {\n        method: \"POST\",\n        body: JSON.stringify(searchBody)\n    });\n    return resultDocuments.value;\n};\nconst similaritySearchVectorWithScore = async (query, k, filter)=>{\n    const openai = (0,_features_common_openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIEmbeddingInstance)();\n    const embeddings = await openai.embeddings.create({\n        input: query,\n        model: process.env.AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME\n    });\n    const url = `${baseIndexUrl()}/docs/search?api-version=${process.env.AZURE_SEARCH_API_VERSION}`;\n    const searchBody = {\n        search: filter?.search || \"*\",\n        facets: filter?.facets || [],\n        filter: filter?.filter || \"\",\n        vectors: [\n            {\n                value: embeddings.data[0].embedding,\n                fields: \"embedding\",\n                k: k\n            }\n        ],\n        top: filter?.top || k\n    };\n    const resultDocuments = await fetcher(url, {\n        method: \"POST\",\n        body: JSON.stringify(searchBody)\n    });\n    return resultDocuments.value;\n};\nconst indexDocuments = async (documents)=>{\n    const url = `${baseIndexUrl()}/docs/index?api-version=${process.env.AZURE_SEARCH_API_VERSION}`;\n    await embedDocuments(documents);\n    const documentIndexRequest = {\n        value: documents\n    };\n    await fetcher(url, {\n        method: \"POST\",\n        body: JSON.stringify(documentIndexRequest)\n    });\n};\nconst deleteDocuments = async (chatThreadId)=>{\n    // find all documents for chat thread\n    const documentsInChat = await simpleSearch({\n        filter: `chatThreadId eq '${chatThreadId}'`\n    });\n    const documentsToDelete = [];\n    documentsInChat.forEach(async (document)=>{\n        const doc = {\n            \"@search.action\": \"delete\",\n            id: document.id\n        };\n        documentsToDelete.push(doc);\n    });\n    // delete the documents\n    await fetcher(`${baseIndexUrl()}/docs/index?api-version=${process.env.AZURE_SEARCH_API_VERSION}`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            value: documentsToDelete\n        })\n    });\n};\nconst embedDocuments = async (documents)=>{\n    const openai = (0,_features_common_openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIEmbeddingInstance)();\n    try {\n        const contentsToEmbed = documents.map((d)=>d.pageContent);\n        const embeddings = await openai.embeddings.create({\n            input: contentsToEmbed,\n            model: process.env.AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME\n        });\n        embeddings.data.forEach((embedding, index)=>{\n            documents[index].embedding = embedding.embedding;\n        });\n    } catch (e) {\n        console.log(e);\n        const error = e;\n        throw new Error(`${e} with code ${error.status}`);\n    }\n};\nconst baseUrl = ()=>{\n    return `https://${process.env.AZURE_SEARCH_NAME}.search.windows.net/indexes`;\n};\nconst baseIndexUrl = ()=>{\n    return `https://${process.env.AZURE_SEARCH_NAME}.search.windows.net/indexes/${process.env.AZURE_SEARCH_INDEX_NAME}`;\n};\nconst fetcher = async (url, init)=>{\n    const response = await fetch(url, {\n        ...init,\n        cache: \"no-store\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"api-key\": process.env.AZURE_SEARCH_API_KEY\n        }\n    });\n    if (!response.ok) {\n        if (response.status === 400) {\n            const err = await response.json();\n            throw new Error(err.error.message);\n        } else {\n            throw new Error(`Azure Cog Search Error: ${response.statusText}`);\n        }\n    }\n    return await response.json();\n};\nconst ensureIndexIsCreated = async ()=>{\n    const url = `${baseIndexUrl()}?api-version=${process.env.AZURE_SEARCH_API_VERSION}`;\n    try {\n        await fetcher(url);\n    } catch (e) {\n        await createCogSearchIndex();\n    }\n};\nconst createCogSearchIndex = async ()=>{\n    const url = `${baseUrl()}?api-version=${process.env.AZURE_SEARCH_API_VERSION}`;\n    await fetcher(url, {\n        method: \"POST\",\n        body: JSON.stringify(AZURE_SEARCH_INDEX)\n    });\n};\nconst AZURE_SEARCH_INDEX = {\n    name: process.env.AZURE_SEARCH_INDEX_NAME,\n    fields: [\n        {\n            name: \"id\",\n            type: \"Edm.String\",\n            key: true,\n            filterable: true\n        },\n        {\n            name: \"user\",\n            type: \"Edm.String\",\n            searchable: true,\n            filterable: true\n        },\n        {\n            name: \"chatThreadId\",\n            type: \"Edm.String\",\n            searchable: true,\n            filterable: true\n        },\n        {\n            name: \"pageContent\",\n            searchable: true,\n            type: \"Edm.String\"\n        },\n        {\n            name: \"metadata\",\n            type: \"Edm.String\"\n        },\n        {\n            name: \"chatType\",\n            type: \"Edm.String\",\n            searchable: true,\n            filterable: true\n        },\n        {\n            name: \"deptName\",\n            type: \"Edm.String\",\n            searchable: true,\n            filterable: true\n        },\n        {\n            name: \"embedding\",\n            type: \"Collection(Edm.Single)\",\n            searchable: true,\n            filterable: false,\n            sortable: false,\n            facetable: false,\n            retrievable: true,\n            dimensions: 1536,\n            vectorSearchConfiguration: \"vectorConfig\"\n        }\n    ],\n    vectorSearch: {\n        algorithmConfigurations: [\n            {\n                name: \"vectorConfig\",\n                kind: \"hnsw\"\n            }\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/azure-cog-search/azure-cog-vector-store.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-api-data.ts":
/*!******************************************************!*\
  !*** ./features/chat/chat-services/chat-api-data.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAPIData: () => (/* binding */ ChatAPIData)\n/* harmony export */ });\n/* harmony import */ var _features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/features/auth/helpers */ \"(rsc)/./features/auth/helpers.ts\");\n/* harmony import */ var _features_common_openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/features/common/openai */ \"(rsc)/./features/common/openai.ts\");\n/* harmony import */ var _features_theme_customise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/features/theme/customise */ \"(rsc)/./features/theme/customise.ts\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ai */ \"(rsc)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var _azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./azure-cog-search/azure-cog-vector-store */ \"(rsc)/./features/chat/chat-services/azure-cog-search/azure-cog-vector-store.ts\");\n/* harmony import */ var _chat_thread_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chat-thread-service */ \"(rsc)/./features/chat/chat-services/chat-thread-service.ts\");\n/* harmony import */ var _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cosmosdb/cosmosdb */ \"(rsc)/./features/chat/chat-services/cosmosdb/cosmosdb.ts\");\n\n\n\n\n\n\n\n// 拡張されたシステムプロンプト\nconst SYSTEM_PROMPT = `あなたは ${_features_theme_customise__WEBPACK_IMPORTED_MODULE_2__.AI_NAME} です。企業内ドキュメント検索アシスタントとして、以下の指針に従って対応します：\n\n1. 正確性：ドキュメントから得られた情報のみを回答に含め、推測や想像は避けます\n2. 明確性：専門用語を使う場合は解説を付け、分かりやすい表現を心がけます\n3. 構造化：重要な情報から順に論理的に情報を提示します\n4. 透明性：情報源を明示し、複数の文書から情報を取得した場合は出典を区別して示します\n5. 適切な範囲：ユーザーの権限レベルに応じた情報のみを提供します\n6. 丁寧さ：敬語を用い、プロフェッショナルな対応を維持します\n\n回答できない内容については、「その情報は提供されたドキュメントには含まれていません」と率直に伝えてください。\n常に回答の最後には情報源の引用を必ず含めてください。`;\n// クエリ最適化プロンプト\nconst QUERY_REFORMULATION_PROMPT = `\nあなたは企業内ドキュメント検索のための質問最適化スペシャリストです。\nユーザーの質問を分析し、以下の点を考慮して検索に最適化されたクエリに書き換えてください：\n\n1. 業務ドキュメント検索に適したキーワードを抽出する\n2. 曖昧な表現を具体的な検索語に変換する\n3. 同義語や関連語を考慮して検索範囲を適切に拡張する\n4. 検索ノイズになる不要な言葉を削除する\n5. 日本語ビジネス文書に特化した検索最適化を行う\n\n元のユーザー質問: {userQuestion}\n\n最適化された検索クエリを以下の形式で出力してください：\nOPTIMIZED_QUERY: [最適化されたクエリ]\n`;\n// 拡張されたコンテキストプロンプト\nconst CONTEXT_PROMPT = ({ context, userQuestion, userRole })=>{\n    return `\n# 企業ドキュメント検索結果と質問\n\n## 指示\n- 以下に提供された企業ドキュメントの抜粋を基に、ユーザーの質問に対する包括的な回答を作成してください。\n- 提供された文脈の情報のみを使用し、文脈にない情報については「その情報は提供された文書には含まれていません」と明示してください。\n- ユーザーの権限レベルは「${userRole}」です。この権限レベルに適した情報提供を行ってください。\n- 回答は論理的に構成し、最も重要な情報から順に提示してください。\n- 複数の文書から情報を統合する場合は、情報源を明確に区別してください。\n- 回答の最後には必ず出典を含めてください。出典は以下の形式で記載してください:\n  {% citation items=[{name:\"ファイル名\",id:\"ファイルID\"}, ...] /%}\n- 引用の記載漏れがないよう確認してください。\n\n## 検索コンテキスト\n${context}\n\n## ユーザーの質問\n${userQuestion}\n`;\n};\nconst ChatAPIData = async (props)=>{\n    const { lastHumanMessage, id, chatThread } = await (0,_chat_thread_service__WEBPACK_IMPORTED_MODULE_4__.initAndGuardChatSession)(props);\n    const openAI = (0,_features_common_openai__WEBPACK_IMPORTED_MODULE_1__.OpenAIInstance)();\n    const userId = await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__.userHashedId)();\n    // ユーザーの権限情報を取得（実際の実装に合わせて修正が必要）\n    const userRole = await getUserRole(userId) || \"Employee\";\n    let chatAPIModel = \"\";\n    if (props.chatAPIModel === \"Current_Version\") {\n        chatAPIModel = \"gpt-4o-mini\";\n    } else {\n        chatAPIModel = \"o1-mini\";\n    }\n    const chatHistory = new _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_5__.CosmosDBChatMessageHistory({\n        sessionId: chatThread.id,\n        userId: userId\n    });\n    const history = await chatHistory.getMessages();\n    // 最新の20メッセージのみを使用してトークン使用量を最適化\n    const topHistory = history.slice(Math.max(0, history.length - 20), history.length);\n    try {\n        // Step 1: ユーザークエリを最適化\n        const optimizedQuery = await reformulateQuery(lastHumanMessage.content, openAI, chatAPIModel);\n        // Step 2: 最適化されたクエリで権限に基づいたドキュメント検索を実行\n        const relevantDocuments = await findRelevantDocumentsWithRBAC(optimizedQuery, userRole, id);\n        // 検索結果がない場合の処理\n        if (!relevantDocuments || relevantDocuments.length === 0) {\n            const noResultsResponse = await openAI.chat.completions.create({\n                messages: [\n                    {\n                        role: \"system\",\n                        content: SYSTEM_PROMPT\n                    },\n                    {\n                        role: \"user\",\n                        content: `質問: ${lastHumanMessage.content}\\n\\n検索結果: 関連するドキュメントが見つかりませんでした。`\n                    }\n                ],\n                model: chatAPIModel,\n                stream: true\n            });\n            const stream = (0,ai__WEBPACK_IMPORTED_MODULE_6__.OpenAIStream)(noResultsResponse, {\n                async onCompletion (completion) {\n                    await chatHistory.addMessage({\n                        content: lastHumanMessage.content,\n                        role: \"user\"\n                    });\n                    await chatHistory.addMessage({\n                        content: completion,\n                        role: \"assistant\"\n                    }, \"検索結果なし\");\n                }\n            });\n            return new ai__WEBPACK_IMPORTED_MODULE_6__.StreamingTextResponse(stream);\n        }\n        // 検索結果の処理とフォーマット\n        const context = processSearchResults(relevantDocuments);\n        const response = await openAI.chat.completions.create({\n            messages: [\n                {\n                    role: \"system\",\n                    content: SYSTEM_PROMPT\n                },\n                ...topHistory,\n                {\n                    role: \"user\",\n                    content: CONTEXT_PROMPT({\n                        context,\n                        userQuestion: lastHumanMessage.content,\n                        userRole\n                    })\n                }\n            ],\n            model: chatAPIModel,\n            stream: true,\n            // GPT-4o-miniに最適化されたパラメータ\n            temperature: 0.5,\n            max_tokens: 1000,\n            top_p: 0.95\n        });\n        const stream = (0,ai__WEBPACK_IMPORTED_MODULE_6__.OpenAIStream)(response, {\n            async onCompletion (completion) {\n                await chatHistory.addMessage({\n                    content: lastHumanMessage.content,\n                    role: \"user\"\n                });\n                await chatHistory.addMessage({\n                    content: completion,\n                    role: \"assistant\"\n                }, context);\n            }\n        });\n        return new ai__WEBPACK_IMPORTED_MODULE_6__.StreamingTextResponse(stream);\n    } catch (e) {\n        if (e instanceof Error) {\n            return new Response(e.message, {\n                status: 500,\n                statusText: e.toString()\n            });\n        } else {\n            return new Response(\"予期せぬエラーが発生しました。\", {\n                status: 500,\n                statusText: \"Unknown Error\"\n            });\n        }\n    }\n};\n/**\n * ユーザーの質問を検索に最適化されたクエリに変換\n */ const reformulateQuery = async (originalQuery, openAI, model)=>{\n    try {\n        const reformulationPrompt = QUERY_REFORMULATION_PROMPT.replace(\"{userQuestion}\", originalQuery);\n        const response = await openAI.chat.completions.create({\n            model: model,\n            messages: [\n                {\n                    role: \"user\",\n                    content: reformulationPrompt\n                }\n            ],\n            temperature: 0.3,\n            max_tokens: 200\n        });\n        const content = response.choices[0].message.content || \"\";\n        const match = content.match(/OPTIMIZED_QUERY:\\s*(.+)/);\n        if (match && match[1]) {\n            return match[1].trim();\n        }\n        console.log(\"Query reformulation failed, using original query\");\n        return originalQuery;\n    } catch (error) {\n        console.error(\"Error in query reformulation:\", error);\n        return originalQuery;\n    }\n};\n/**\n * 検索結果を処理して読みやすく構造化されたフォーマットに変換\n */ const processSearchResults = (documents)=>{\n    if (!documents || documents.length === 0) {\n        return \"関連するドキュメントは見つかりませんでした。\";\n    }\n    return documents.map((result, index)=>{\n        // テキスト正規化: 改行や余分なスペースを適切に処理\n        const content = result.pageContent.replace(/(\\r\\n|\\n|\\r)/gm, \" \").replace(/\\s+/g, \" \").trim();\n        // メタデータ処理\n        const fileName = result.metadata || \"不明なファイル\";\n        const fileId = result.id || \"不明なID\";\n        // マークダウン形式でフォーマット\n        return `## ドキュメント ${index + 1}\n**ファイル名**: ${fileName}\n**ファイルID**: ${fileId}\n\n**内容**:\n${content}`;\n    }).join(\"\\n\\n---\\n\\n\");\n};\n/**\n * ユーザーのロールを取得する関数\n * 実際の実装に合わせて修正が必要\n */ const getUserRole = async (userId)=>{\n    // 実際の実装ではユーザーデータベースやIDプロバイダーからロール情報を取得\n    // この例では仮にEmployeeを返す\n    return \"Employee\";\n};\n/**\n * ユーザーの権限に基づいてフィルターを生成\n */ const generateRoleBasedFilter = (role)=>{\n    switch(role){\n        case \"Excective\":\n            // エグゼクティブは全てのドキュメントにアクセス可能\n            return `(ChatAuth_Excective eq 'true' or ChatAuth_Manager eq 'true' or ChatAuth_Employee eq 'true' or ChatAuth_Contract eq 'true')`;\n        case \"Manager\":\n            // マネージャーはマネージャー以下の権限のドキュメントにアクセス可能\n            return `(ChatAuth_Manager eq 'true' or ChatAuth_Employee eq 'true' or ChatAuth_Contract eq 'true')`;\n        case \"Employee\":\n            // 従業員は従業員と契約社員のドキュメントにアクセス可能\n            return `(ChatAuth_Employee eq 'true' or ChatAuth_Contract eq 'true')`;\n        case \"Contract\":\n            // 契約社員は契約社員のドキュメントのみにアクセス可能\n            return `(ChatAuth_Contract eq 'true')`;\n        default:\n            // デフォルトは最も制限されたアクセス\n            return `(ChatAuth_Contract eq 'true')`;\n    }\n};\n/**\n * 権限に基づいた関連ドキュメントの検索\n */ const findRelevantDocumentsWithRBAC = async (query, userRole, chatThreadId)=>{\n    // ユーザーの権限に基づいたフィルターを生成\n    const roleFilter = generateRoleBasedFilter(userRole);\n    const userId = await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__.userHashedId)();\n    // 基本検索フィルターとロールフィルターを組み合わせる\n    const combinedFilter = `user eq '${userId}' and chatThreadId eq '${chatThreadId}' and chatType eq 'data'`;\n    //  const combinedFilter = `chatType eq 'data' and ${roleFilter}`;\n    try {\n        // 検索実行\n        const relevantDocuments = await (0,_azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_3__.similaritySearchVectorWithScore)(query, 10, {\n            filter: combinedFilter\n        });\n        // 検索結果をそのまま返す（上位10件が既に取得されている）\n        return relevantDocuments;\n    } catch (error) {\n        console.error(\"Error in document search with RBAC:\", error);\n        return [];\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-api-data.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-api-doc.ts":
/*!*****************************************************!*\
  !*** ./features/chat/chat-services/chat-api-doc.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAPIDoc: () => (/* binding */ ChatAPIDoc)\n/* harmony export */ });\n/* harmony import */ var _features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/features/auth/helpers */ \"(rsc)/./features/auth/helpers.ts\");\n/* harmony import */ var _features_common_openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/features/common/openai */ \"(rsc)/./features/common/openai.ts\");\n/* harmony import */ var _features_theme_customise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/features/theme/customise */ \"(rsc)/./features/theme/customise.ts\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ai */ \"(rsc)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var _azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./azure-cog-search/azure-cog-vector-store */ \"(rsc)/./features/chat/chat-services/azure-cog-search/azure-cog-vector-store.ts\");\n/* harmony import */ var _chat_thread_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chat-thread-service */ \"(rsc)/./features/chat/chat-services/chat-thread-service.ts\");\n/* harmony import */ var _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cosmosdb/cosmosdb */ \"(rsc)/./features/chat/chat-services/cosmosdb/cosmosdb.ts\");\n\n\n\n\n\n\n\n// 拡張されたシステムプロンプト\nconst SYSTEM_PROMPT = `あなたは ${_features_theme_customise__WEBPACK_IMPORTED_MODULE_2__.AI_NAME} です。企業内ドキュメント検索アシスタントとして、以下の指針に従って対応します：\n\n1. 正確性：ドキュメントから得られた情報のみを回答に含め、推測や想像は避けます\n2. 明確性：専門用語を使う場合は解説を付け、分かりやすい表現を心がけます\n3. 構造化：重要な情報から順に論理的に情報を提示します\n4. 透明性：情報源を明示し、複数の文書から情報を取得した場合は出典を区別して示します\n5. 適切な範囲：ユーザーの権限レベルに応じた情報のみを提供します\n6. 丁寧さ：敬語を用い、プロフェッショナルな対応を維持します\n\n回答できない内容については、「その情報は提供されたドキュメントには含まれていません」と率直に伝えてください。\n常に回答の最後には情報源の引用を必ず含めてください。`;\n// クエリ最適化プロンプト\nconst QUERY_REFORMULATION_PROMPT = `\nあなたは企業内ドキュメント検索のための質問最適化スペシャリストです。\nユーザーの質問を分析し、以下の点を考慮して検索に最適化されたクエリに書き換えてください：\n\n1. 業務ドキュメント検索に適したキーワードを抽出する\n2. 曖昧な表現を具体的な検索語に変換する\n3. 同義語や関連語を考慮して検索範囲を適切に拡張する\n4. 検索ノイズになる不要な言葉を削除する\n5. 日本語ビジネス文書に特化した検索最適化を行う\n\n元のユーザー質問: {userQuestion}\n\n最適化された検索クエリを以下の形式で出力してください：\nOPTIMIZED_QUERY: [最適化されたクエリ]\n`;\n// 拡張されたコンテキストプロンプト\nconst CONTEXT_PROMPT = ({ context, userQuestion, userRole })=>{\n    return `\n# 企業ドキュメント検索結果と質問\n\n## 指示\n- 以下に提供された企業ドキュメントの抜粋を基に、ユーザーの質問に対する包括的な回答を作成してください。\n- 提供された文脈の情報のみを使用し、文脈にない情報については「その情報は提供された文書には含まれていません」と明示してください。\n- ユーザーの権限レベルは「${userRole}」です。この権限レベルに適した情報提供を行ってください。\n- 回答は論理的に構成し、最も重要な情報から順に提示してください。\n- 複数の文書から情報を統合する場合は、情報源を明確に区別してください。\n- 回答の最後には必ず出典を含めてください。出典は以下の形式で記載してください:\n  {% citation items=[{name:\"ファイル名\",id:\"ファイルID\"}, ...] /%}\n- 引用の記載漏れがないよう確認してください。\n\n## 検索コンテキスト\n${context}\n\n## ユーザーの質問\n${userQuestion}\n`;\n};\nconst ChatAPIDoc = async (props)=>{\n    const { lastHumanMessage, id, chatThread } = await (0,_chat_thread_service__WEBPACK_IMPORTED_MODULE_4__.initAndGuardChatSession)(props);\n    const openAI = (0,_features_common_openai__WEBPACK_IMPORTED_MODULE_1__.OpenAIInstance)();\n    const userId = await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__.userHashedId)();\n    // ユーザーの権限情報を取得（実際の実装に合わせて修正が必要）\n    const userRole = await getUserRole(userId) || \"Employee\";\n    let chatAPIModel = \"\";\n    if (props.chatAPIModel === \"Current_Version\") {\n        chatAPIModel = \"gpt-4o-mini\";\n    } else {\n        chatAPIModel = \"o1-mini\";\n    }\n    const chatHistory = new _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_5__.CosmosDBChatMessageHistory({\n        sessionId: chatThread.id,\n        userId: userId\n    });\n    const history = await chatHistory.getMessages();\n    // 最新の20メッセージのみを使用してトークン使用量を最適化\n    const topHistory = history.slice(Math.max(0, history.length - 20), history.length);\n    try {\n        // Step 1: ユーザークエリを最適化\n        const optimizedQuery = await reformulateQuery(lastHumanMessage.content, openAI, chatAPIModel);\n        // Step 2: 最適化されたクエリで権限に基づいたドキュメント検索を実行\n        const relevantDocuments = await findRelevantDocumentsWithRBAC(optimizedQuery, userRole, id);\n        // 検索結果がない場合の処理\n        if (!relevantDocuments || relevantDocuments.length === 0) {\n            const noResultsResponse = await openAI.chat.completions.create({\n                messages: [\n                    {\n                        role: \"system\",\n                        content: SYSTEM_PROMPT\n                    },\n                    {\n                        role: \"user\",\n                        content: `質問: ${lastHumanMessage.content}\\n\\n検索結果: 関連するドキュメントが見つかりませんでした。`\n                    }\n                ],\n                model: chatAPIModel,\n                stream: true\n            });\n            const stream = (0,ai__WEBPACK_IMPORTED_MODULE_6__.OpenAIStream)(noResultsResponse, {\n                async onCompletion (completion) {\n                    await chatHistory.addMessage({\n                        content: lastHumanMessage.content,\n                        role: \"user\"\n                    });\n                    await chatHistory.addMessage({\n                        content: completion,\n                        role: \"assistant\"\n                    }, \"検索結果なし\");\n                }\n            });\n            return new ai__WEBPACK_IMPORTED_MODULE_6__.StreamingTextResponse(stream);\n        }\n        // 検索結果の処理とフォーマット\n        const context = processSearchResults(relevantDocuments);\n        const response = await openAI.chat.completions.create({\n            messages: [\n                {\n                    role: \"system\",\n                    content: SYSTEM_PROMPT\n                },\n                ...topHistory,\n                {\n                    role: \"user\",\n                    content: CONTEXT_PROMPT({\n                        context,\n                        userQuestion: lastHumanMessage.content,\n                        userRole\n                    })\n                }\n            ],\n            model: chatAPIModel,\n            stream: true,\n            // GPT-4o-miniに最適化されたパラメータ\n            temperature: 0.5,\n            max_tokens: 1000,\n            top_p: 0.95\n        });\n        const stream = (0,ai__WEBPACK_IMPORTED_MODULE_6__.OpenAIStream)(response, {\n            async onCompletion (completion) {\n                await chatHistory.addMessage({\n                    content: lastHumanMessage.content,\n                    role: \"user\"\n                });\n                await chatHistory.addMessage({\n                    content: completion,\n                    role: \"assistant\"\n                }, context);\n            }\n        });\n        return new ai__WEBPACK_IMPORTED_MODULE_6__.StreamingTextResponse(stream);\n    } catch (e) {\n        if (e instanceof Error) {\n            return new Response(e.message, {\n                status: 500,\n                statusText: e.toString()\n            });\n        } else {\n            return new Response(\"予期せぬエラーが発生しました。\", {\n                status: 500,\n                statusText: \"Unknown Error\"\n            });\n        }\n    }\n};\n/**\n * ユーザーの質問を検索に最適化されたクエリに変換\n */ const reformulateQuery = async (originalQuery, openAI, model)=>{\n    try {\n        const reformulationPrompt = QUERY_REFORMULATION_PROMPT.replace(\"{userQuestion}\", originalQuery);\n        const response = await openAI.chat.completions.create({\n            model: model,\n            messages: [\n                {\n                    role: \"user\",\n                    content: reformulationPrompt\n                }\n            ],\n            temperature: 0.3,\n            max_tokens: 200\n        });\n        const content = response.choices[0].message.content || \"\";\n        const match = content.match(/OPTIMIZED_QUERY:\\s*(.+)/);\n        if (match && match[1]) {\n            return match[1].trim();\n        }\n        console.log(\"Query reformulation failed, using original query\");\n        return originalQuery;\n    } catch (error) {\n        console.error(\"Error in query reformulation:\", error);\n        return originalQuery;\n    }\n};\n/**\n * 検索結果を処理して読みやすく構造化されたフォーマットに変換\n */ const processSearchResults = (documents)=>{\n    if (!documents || documents.length === 0) {\n        return \"関連するドキュメントは見つかりませんでした。\";\n    }\n    return documents.map((result, index)=>{\n        // テキスト正規化: 改行や余分なスペースを適切に処理\n        const content = result.pageContent.replace(/(\\r\\n|\\n|\\r)/gm, \" \").replace(/\\s+/g, \" \").trim();\n        // メタデータ処理\n        const fileName = result.metadata || \"不明なファイル\";\n        const fileId = result.id || \"不明なID\";\n        // マークダウン形式でフォーマット\n        return `## ドキュメント ${index + 1}\n**ファイル名**: ${fileName}\n**ファイルID**: ${fileId}\n\n**内容**:\n${content}`;\n    }).join(\"\\n\\n---\\n\\n\");\n};\n/**\n * ユーザーのロールを取得する関数\n * 実際の実装に合わせて修正が必要\n */ const getUserRole = async (userId)=>{\n    // 実際の実装ではユーザーデータベースやIDプロバイダーからロール情報を取得\n    // この例では仮にEmployeeを返す\n    return \"Employee\";\n};\n/**\n * ユーザーの権限に基づいてフィルターを生成\n */ const generateRoleBasedFilter = (role)=>{\n    switch(role){\n        case \"Excective\":\n            // エグゼクティブは全てのドキュメントにアクセス可能\n            return `(ChatAuth_Excective eq 'true' or ChatAuth_Manager eq 'true' or ChatAuth_Employee eq 'true' or ChatAuth_Contract eq 'true')`;\n        case \"Manager\":\n            // マネージャーはマネージャー以下の権限のドキュメントにアクセス可能\n            return `(ChatAuth_Manager eq 'true' or ChatAuth_Employee eq 'true' or ChatAuth_Contract eq 'true')`;\n        case \"Employee\":\n            // 従業員は従業員と契約社員のドキュメントにアクセス可能\n            return `(ChatAuth_Employee eq 'true' or ChatAuth_Contract eq 'true')`;\n        case \"Contract\":\n            // 契約社員は契約社員のドキュメントのみにアクセス可能\n            return `(ChatAuth_Contract eq 'true')`;\n        default:\n            // デフォルトは最も制限されたアクセス\n            return `(ChatAuth_Contract eq 'true')`;\n    }\n};\n/**\n * 権限に基づいた関連ドキュメントの検索\n */ const findRelevantDocumentsWithRBAC = async (query, userRole, chatThreadId)=>{\n    // ユーザーの権限に基づいたフィルターを生成\n    const roleFilter = generateRoleBasedFilter(userRole);\n    const userId = await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__.userHashedId)();\n    // 基本検索フィルターとロールフィルターを組み合わせる\n    const combinedFilter = `chatType eq 'data'`;\n    //  const combinedFilter = `chatType eq 'data' and ${roleFilter}`;\n    try {\n        // 検索実行\n        const relevantDocuments = await (0,_azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_3__.similaritySearchVectorWithScore)(query, 10, {\n            filter: combinedFilter\n        });\n        // 検索結果をそのまま返す（上位10件が既に取得されている）\n        return relevantDocuments;\n    } catch (error) {\n        console.error(\"Error in document search with RBAC:\", error);\n        return [];\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-api-doc.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-api-entry.ts":
/*!*******************************************************!*\
  !*** ./features/chat/chat-services/chat-api-entry.ts ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chatAPIEntry: () => (/* binding */ chatAPIEntry)\n/* harmony export */ });\n/* harmony import */ var _chat_api_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat-api-data */ \"(rsc)/./features/chat/chat-services/chat-api-data.ts\");\n/* harmony import */ var _chat_api_doc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat-api-doc */ \"(rsc)/./features/chat/chat-services/chat-api-doc.ts\");\n/* harmony import */ var _chat_api_simple__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat-api-simple */ \"(rsc)/./features/chat/chat-services/chat-api-simple.ts\");\n/* harmony import */ var _chat_api_web__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chat-api-web */ \"(rsc)/./features/chat/chat-services/chat-api-web.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_chat_api_web__WEBPACK_IMPORTED_MODULE_3__]);\n_chat_api_web__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst chatAPIEntry = async (props)=>{\n    if (props.chatType === \"simple\") {\n        return await (0,_chat_api_simple__WEBPACK_IMPORTED_MODULE_2__.ChatAPISimple)(props);\n    } else if (props.chatType === \"web\") {\n        return await (0,_chat_api_web__WEBPACK_IMPORTED_MODULE_3__.ChatAPIWeb)(props);\n    } else if (props.chatType === \"data\") {\n        return await (0,_chat_api_data__WEBPACK_IMPORTED_MODULE_0__.ChatAPIData)(props);\n    } else if (props.chatType === \"doc\") {\n        return await (0,_chat_api_doc__WEBPACK_IMPORTED_MODULE_1__.ChatAPIDoc)(props);\n    } else if (props.chatType === \"mssql\") {\n        return await (0,_chat_api_data__WEBPACK_IMPORTED_MODULE_0__.ChatAPIData)(props);\n    } else {\n        return await (0,_chat_api_simple__WEBPACK_IMPORTED_MODULE_2__.ChatAPISimple)(props);\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvY2hhdC1hcGktZW50cnkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEM7QUFDRjtBQUNNO0FBQ047QUFHckMsTUFBTUksZUFBZSxPQUFPQztJQUNqQyxJQUFJQSxNQUFNQyxRQUFRLEtBQUssVUFBVTtRQUMvQixPQUFPLE1BQU1KLCtEQUFhQSxDQUFDRztJQUM3QixPQUFPLElBQUlBLE1BQU1DLFFBQVEsS0FBSyxPQUFPO1FBQ25DLE9BQU8sTUFBTUgseURBQVVBLENBQUNFO0lBQzFCLE9BQU8sSUFBSUEsTUFBTUMsUUFBUSxLQUFLLFFBQVE7UUFDcEMsT0FBTyxNQUFNTiwyREFBV0EsQ0FBQ0s7SUFDM0IsT0FBTyxJQUFJQSxNQUFNQyxRQUFRLEtBQUssT0FBTztRQUNuQyxPQUFPLE1BQU1MLHlEQUFVQSxDQUFDSTtJQUMxQixPQUFPLElBQUlBLE1BQU1DLFFBQVEsS0FBSyxTQUFTO1FBQ3JDLE9BQU8sTUFBTU4sMkRBQVdBLENBQUNLO0lBQzNCLE9BQU87UUFDTCxPQUFPLE1BQU1ILCtEQUFhQSxDQUFDRztJQUM3QjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9henVyZS1vcGVuLWFpLWFjY2VsZXJhdG9yLy4vZmVhdHVyZXMvY2hhdC9jaGF0LXNlcnZpY2VzL2NoYXQtYXBpLWVudHJ5LnRzPzIxNmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhdEFQSURhdGEgfSBmcm9tIFwiLi9jaGF0LWFwaS1kYXRhXCI7XG5pbXBvcnQgeyBDaGF0QVBJRG9jIH0gZnJvbSBcIi4vY2hhdC1hcGktZG9jXCI7XG5pbXBvcnQgeyBDaGF0QVBJU2ltcGxlIH0gZnJvbSBcIi4vY2hhdC1hcGktc2ltcGxlXCI7XG5pbXBvcnQgeyBDaGF0QVBJV2ViIH0gZnJvbSBcIi4vY2hhdC1hcGktd2ViXCI7XG5pbXBvcnQgeyBQcm9tcHRHUFRQcm9wcyB9IGZyb20gXCIuL21vZGVsc1wiO1xuXG5leHBvcnQgY29uc3QgY2hhdEFQSUVudHJ5ID0gYXN5bmMgKHByb3BzOiBQcm9tcHRHUFRQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuY2hhdFR5cGUgPT09IFwic2ltcGxlXCIpIHtcbiAgICByZXR1cm4gYXdhaXQgQ2hhdEFQSVNpbXBsZShwcm9wcyk7XG4gIH0gZWxzZSBpZiAocHJvcHMuY2hhdFR5cGUgPT09IFwid2ViXCIpIHtcbiAgICByZXR1cm4gYXdhaXQgQ2hhdEFQSVdlYihwcm9wcyk7XG4gIH0gZWxzZSBpZiAocHJvcHMuY2hhdFR5cGUgPT09IFwiZGF0YVwiKSB7XG4gICAgcmV0dXJuIGF3YWl0IENoYXRBUElEYXRhKHByb3BzKTtcbiAgfSBlbHNlIGlmIChwcm9wcy5jaGF0VHlwZSA9PT0gXCJkb2NcIikge1xuICAgIHJldHVybiBhd2FpdCBDaGF0QVBJRG9jKHByb3BzKTtcbiAgfSBlbHNlIGlmIChwcm9wcy5jaGF0VHlwZSA9PT0gXCJtc3NxbFwiKSB7XG4gICAgcmV0dXJuIGF3YWl0IENoYXRBUElEYXRhKHByb3BzKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYXdhaXQgQ2hhdEFQSVNpbXBsZShwcm9wcyk7XG4gIH1cbn07Il0sIm5hbWVzIjpbIkNoYXRBUElEYXRhIiwiQ2hhdEFQSURvYyIsIkNoYXRBUElTaW1wbGUiLCJDaGF0QVBJV2ViIiwiY2hhdEFQSUVudHJ5IiwicHJvcHMiLCJjaGF0VHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-api-entry.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-api-simple.ts":
/*!********************************************************!*\
  !*** ./features/chat/chat-services/chat-api-simple.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAPISimple: () => (/* binding */ ChatAPISimple)\n/* harmony export */ });\n/* harmony import */ var _features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/features/auth/helpers */ \"(rsc)/./features/auth/helpers.ts\");\n/* harmony import */ var _features_theme_customise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/features/theme/customise */ \"(rsc)/./features/theme/customise.ts\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ai */ \"(rsc)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var _chat_thread_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat-thread-service */ \"(rsc)/./features/chat/chat-services/chat-thread-service.ts\");\n/* harmony import */ var _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cosmosdb/cosmosdb */ \"(rsc)/./features/chat/chat-services/cosmosdb/cosmosdb.ts\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\n\n\n\n\n\nconst ChatAPISimple = async (props)=>{\n    const { lastHumanMessage, chatThread } = await (0,_chat_thread_service__WEBPACK_IMPORTED_MODULE_2__.initAndGuardChatSession)(props);\n    const userId = await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__.userHashedId)();\n    const chatHistory = new _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_3__.CosmosDBChatMessageHistory({\n        sessionId: chatThread.id,\n        userId: userId\n    });\n    await chatHistory.addMessage({\n        content: lastHumanMessage.content,\n        role: \"user\"\n    });\n    const history = await chatHistory.getMessages();\n    const topHistory = history.slice(history.length - 30, history.length);\n    try {\n        // 画像生成が必要かどうかを判断\n        const isImageGenerationRequest = checkIfImageGenerationRequest(lastHumanMessage.content);\n        if (isImageGenerationRequest) {\n            try {\n                // 画像生成リクエストを処理\n                // 固定の画像生成エンドポイントを使用\n                const dalleEndpoint = \"https://noka-m7xtz7xj-swedencentral.cognitiveservices.azure.com/\";\n                const dalleDeploymentName = \"dall-e-3\";\n                const dalleApiVersion = \"2024-02-01\";\n                // DALL-E専用のAPIキーを取得\n                const dalleApiKey = process.env.AZURE_OPENAI_DALLE_API_KEY;\n                if (!dalleApiKey) {\n                    throw new Error(\"Azure OpenAI DALL-E用のAPIキーが設定されていません。AZURE_OPENAI_DALLE_API_KEY を設定してください。\");\n                }\n                // デプロイメント名で画像生成を開始\n                // 直接fetch APIを使用して画像生成リクエストを送信\n                const endpoint = `${dalleEndpoint}openai/deployments/${dalleDeploymentName}/images/generations?api-version=${dalleApiVersion}`;\n                // エンドポイントにリクエスト送信\n                const response = await fetch(endpoint, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"api-key\": dalleApiKey\n                    },\n                    body: JSON.stringify({\n                        prompt: lastHumanMessage.content,\n                        n: 1,\n                        size: \"1024x1024\"\n                    })\n                });\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    // API応答エラー処理\n                    throw new Error(`画像生成APIエラー: ${response.status} ${errorText}`);\n                }\n                const imageData = await response.json();\n                // 画像生成 API の応答を受信\n                // OpenAIクライアントは使用しない\n                /* \n        const dalleClient = new OpenAI({\n          apiKey: apiKey,\n          baseURL: `${dalleEndpoint}openai/deployments/${dalleDeploymentName}`,\n          defaultQuery: { \"api-version\": dalleApiVersion },\n          defaultHeaders: { \"api-key\": apiKey },\n        });\n        */ // 画像 URL を取得 - 応答の形式はAzure OpenAI固有のものとなる\n                const imageUrl = imageData.data?.[0]?.url;\n                if (imageUrl) {\n                    // 画像 URL を取得\n                    const imageCompletion = `![生成画像](${imageUrl})`;\n                    // 履歴に画像生成結果を追加\n                    await chatHistory.addMessage({\n                        content: imageCompletion,\n                        role: \"assistant\"\n                    });\n                    // 画像 URL をレスポンスとして返す\n                    // return new Response(JSON.stringify({ type: \"image\", url: imageUrl,text:\"l\" }), {\n                    //   headers: { \"Content-Type\": \"application/json\" },\n                    // });          \n                    return new Response(imageCompletion, {\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        }\n                    });\n                    //   return new Response(JSON.stringify({ type: \"image\", url: imageUrl, text: imageCompletion }), {\n                    //     headers: { \"Content-Type\": \"application/json\" },\n                    //   });\n                    // } else {\n                    throw new Error(\"画像 URL が取得できませんでした\");\n                }\n            } catch (imageError) {\n                // 画像生成エラー処理\n                // エラーメッセージをユーザーに返す\n                const errorMessage = \"画像生成機能は現在利用できません。テキストによる回答に切り替えます。\";\n                // 履歴にエラーメッセージを追加\n                await chatHistory.addMessage({\n                    content: errorMessage,\n                    role: \"assistant\"\n                });\n            // テキスト応答にフォールバック\n            }\n        }\n        // モデル選択ロジック\n        let chatDeploymentName = \"\";\n        if (props.chatAPIModel === \"Current_Version\") {\n            // Azure OpenAI Service のデプロイメント名を使用\n            chatDeploymentName = process.env.AZURE_OPENAI_GPT_DEPLOYMENT_NAME || \"gpt-4o-mini\";\n        } else {\n            chatDeploymentName = \"o1-mini\"; // Current_Version でない場合は o1-mini を使用\n        }\n        // テキスト応答のデプロイメントを使用\n        // 環境変数からAzure OpenAIの設定を取得\n        const endpoint = process.env.AZURE_OPENAI_ENDPOINT;\n        const apiKey = process.env.AZURE_OPENAI_API_KEY;\n        const apiVersion = process.env.OPENAI_API_VERSION || \"2023-05-15\";\n        if (!endpoint || !apiKey) {\n            throw new Error(\"Azure OpenAIの設定が不足しています。AZURE_OPENAI_ENDPOINT と AZURE_OPENAI_API_KEY を設定してください。\");\n        }\n        // テキスト応答用のOpenAIクライアントを作成\n        const chatClient = new openai__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n            apiKey: apiKey,\n            baseURL: `${endpoint}openai/deployments/${chatDeploymentName}`,\n            defaultQuery: {\n                \"api-version\": apiVersion\n            },\n            defaultHeaders: {\n                \"api-key\": apiKey\n            }\n        });\n        // システムプロンプト\n        const systemPrompt = `あなたは ${_features_theme_customise__WEBPACK_IMPORTED_MODULE_1__.AI_NAME} です。ユーザーからの質問に対して日本語で丁寧に回答します。\n- 簡潔かつ正確な情報を提供し、専門用語がある場合は分かりやすく説明します。\n- 質問の意図が不明確な場合は、具体的な質問をして意図を明確にしてから回答します。\n- ユーザーの知識レベルに合わせて、適切な詳細さで回答します。\n- 確実な情報のみを提供し、不確かな情報には「確認が必要です」と明示します。\n- 複雑な質問には段階的に説明し、理解しやすいように例を交えます。\n- 常に礼儀正しく、親切な対応を心がけます。`;\n        // チャット応答を生成\n        const response = await chatClient.chat.completions.create({\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                ...topHistory\n            ],\n            model: chatDeploymentName,\n            stream: true\n        });\n        const stream = (0,ai__WEBPACK_IMPORTED_MODULE_5__.OpenAIStream)(response, {\n            async onCompletion (completion) {\n                await chatHistory.addMessage({\n                    content: completion,\n                    role: \"assistant\"\n                });\n            }\n        });\n        return new ai__WEBPACK_IMPORTED_MODULE_5__.StreamingTextResponse(stream);\n    } catch (e) {\n        // 全体的なエラー処理\n        if (e instanceof Error) {\n            return new Response(e.message, {\n                status: 500,\n                statusText: e.toString()\n            });\n        } else {\n            return new Response(\"An unknown error occurred.\", {\n                status: 500,\n                statusText: \"Unknown Error\"\n            });\n        }\n    }\n};\n/**\n * ユーザーの入力が画像生成リクエストかどうかを判断する関数\n */ function checkIfImageGenerationRequest(content) {\n    const imageGenerationKeywords = [\n        \"絵を描いて\",\n        \"画像を生成\",\n        \"イラストを作って\",\n        \"写真を作成\",\n        \"画像を作って\",\n        \"描いて\",\n        \"絵を作って\",\n        \"イメージを生成\",\n        \"画像生成\",\n        \"ビジュアル化して\",\n        \"イラスト化\",\n        \"絵にして\",\n        \"visualize\",\n        \"draw\",\n        \"generate image\"\n    ];\n    const lowerContent = content.toLowerCase();\n    return imageGenerationKeywords.some((keyword)=>lowerContent.includes(keyword));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-api-simple.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-api-web.ts":
/*!*****************************************************!*\
  !*** ./features/chat/chat-services/chat-api-web.ts ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatAPIWeb: () => (/* binding */ ChatAPIWeb)\n/* harmony export */ });\n/* harmony import */ var _features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/features/auth/helpers */ \"(rsc)/./features/auth/helpers.ts\");\n/* harmony import */ var _features_common_openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/features/common/openai */ \"(rsc)/./features/common/openai.ts\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ai */ \"(rsc)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var _chat_thread_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat-thread-service */ \"(rsc)/./features/chat/chat-services/chat-thread-service.ts\");\n/* harmony import */ var _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cosmosdb/cosmosdb */ \"(rsc)/./features/chat/chat-services/cosmosdb/cosmosdb.ts\");\n/* harmony import */ var _Azure_bing_search_bing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Azure-bing-search/bing */ \"(rsc)/./features/chat/chat-services/Azure-bing-search/bing.ts\");\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([puppeteer__WEBPACK_IMPORTED_MODULE_5__]);\npuppeteer__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\nconst ChatAPIWeb = async (props)=>{\n    let browser;\n    try {\n        // Destructure and initialize variables\n        const { lastHumanMessage, chatThread } = await (0,_chat_thread_service__WEBPACK_IMPORTED_MODULE_2__.initAndGuardChatSession)(props);\n        const openAI = (0,_features_common_openai__WEBPACK_IMPORTED_MODULE_1__.OpenAIInstance)();\n        const userId = await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_0__.userHashedId)();\n        // Initialize chat history\n        const chatHistory = new _cosmosdb_cosmosdb__WEBPACK_IMPORTED_MODULE_3__.CosmosDBChatMessageHistory({\n            sessionId: chatThread.id,\n            userId: userId\n        });\n        // Get recent chat history\n        const history = await chatHistory.getMessages();\n        const topHistory = history.slice(-50);\n        // Generate search query using GPT-4o\n        const searchQueryResponse = await openAI.chat.completions.create({\n            messages: [\n                {\n                    role: \"system\",\n                    content: `あなたは検索クエリ生成の専門家です。\nユーザーの質問と会話の文脈から、最適な検索クエリを生成してください。\n以下の点に注意してください：\n1. 会話の文脈を考慮し、前の質問と関連する情報も含めてください\n2. 企業名、人名、数値などの具体的な情報は必ず含めてください\n3. 日本語で検索するため、重要なキーワードは日本語で出力してください\n4. 検索クエリはシンプルで簡潔にしてください\n5. 検索クエリのみを出力してください（説明は不要です）`\n                },\n                ...topHistory,\n                {\n                    role: \"user\",\n                    content: `これまでの会話履歴と最新の質問から、最適な検索クエリを生成してください。\n最新の質問: ${lastHumanMessage.content}`\n                }\n            ],\n            model: \"gpt-4o-mini\",\n            max_tokens: 100,\n            temperature: 0.3\n        });\n        const searchQuery = searchQueryResponse.choices[0]?.message?.content || lastHumanMessage.content;\n        console.log(\"Generated search query:\", searchQuery);\n        // Initialize Bing Search with error handling\n        const bing = new _Azure_bing_search_bing__WEBPACK_IMPORTED_MODULE_4__.BingSearchResult();\n        let webSearchContent = \"\";\n        try {\n            const searchResult = await bing.SearchWeb(searchQuery);\n            if (searchResult?.webPages?.value) {\n                // Initialize browser only if we have search results\n                browser = await puppeteer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].launch({\n                    headless: true,\n                    args: [\n                        \"--no-sandbox\",\n                        \"--disable-setuid-sandbox\",\n                        \"--disable-dev-shm-usage\",\n                        \"--disable-gpu\",\n                        \"--no-first-run\",\n                        \"--no-zygote\",\n                        \"--single-process\",\n                        \"--disable-extensions\"\n                    ],\n                    ignoreHTTPSErrors: true,\n                    timeout: 30000\n                });\n                // Process web pages\n                const webPageContents = await Promise.all(searchResult.webPages.value.slice(0, 5).map(async (page)=>{\n                    let pageInstance = null;\n                    try {\n                        if (!browser) {\n                            throw new Error(\"Browser instance not initialized\");\n                        }\n                        pageInstance = await browser.newPage();\n                        await pageInstance.setDefaultNavigationTimeout(15000);\n                        await pageInstance.setViewport({\n                            width: 1280,\n                            height: 800\n                        });\n                        const response = await pageInstance.goto(page.url, {\n                            waitUntil: \"domcontentloaded\",\n                            timeout: 15000\n                        });\n                        if (!response || !response.ok()) {\n                            throw new Error(`Failed to load page: ${page.url}`);\n                        }\n                        const pageText = await pageInstance.evaluate(()=>{\n                            const removeElements = (selector)=>{\n                                document.querySelectorAll(selector).forEach((el)=>el.remove());\n                            };\n                            [\n                                \"script\",\n                                \"style\",\n                                \"nav\",\n                                \"header\",\n                                \"footer\",\n                                \"iframe\",\n                                \"noscript\"\n                            ].forEach(removeElements);\n                            const contentSelectors = [\n                                \"main\",\n                                \"article\",\n                                '[role=\"main\"]',\n                                \"#main-content\",\n                                \".main-content\",\n                                \".content\",\n                                \"body\"\n                            ];\n                            for (const selector of contentSelectors){\n                                const element = document.querySelector(selector);\n                                if (element?.textContent?.trim()) {\n                                    return element.textContent.trim();\n                                }\n                            }\n                            return document.body.textContent?.trim() || \"\";\n                        });\n                        const cleanUrl = new URL(page.url).toString();\n                        return {\n                            url: cleanUrl,\n                            title: page.name || \"\",\n                            snippet: page.snippet || \"\",\n                            content: (pageText || \"\").substring(0, 2000)\n                        };\n                    } catch (error) {\n                        console.error(`Error scraping ${page.url}:`, error);\n                        return {\n                            url: page.url,\n                            title: page.name || \"\",\n                            snippet: page.snippet || \"\",\n                            content: page.snippet || \"\"\n                        };\n                    } finally{\n                        if (pageInstance) {\n                            await pageInstance.close().catch(console.error);\n                        }\n                    }\n                }));\n                // Format web search content if we have results\n                webSearchContent = `\n使用した検索クエリ: \"${searchQuery}\"\n\nWeb検索結果の概要:\n${webPageContents.map((page)=>`\nタイトル: ${page.title}\nURL: [${page.url}](${page.url})\nスニペット: ${page.snippet}\n\n詳細コンテンツ抜粋:\n${page.content}\n`).join(\"\\n\\n\")}`;\n            }\n        } catch (error) {\n            console.warn(\"Web search failed:\", error);\n            webSearchContent = \"\\nWeb検索結果はありませんでした。既存の知識ベースに基づいて回答いたします。\";\n        }\n        // Add user message to chat history\n        await chatHistory.addMessage({\n            content: lastHumanMessage.content,\n            role: \"user\"\n        });\n        // Construct prompt\n        const prompt = `\n以前の会話の文脈:\n${topHistory.map((msg)=>`${msg.role}: ${msg.content}`).join(\"\\n\")}\n\n最新の問い合わせ: ${lastHumanMessage.content}\n\n${webSearchContent}\n\n上記の会話の文脈${webSearchContent ? \"と検索結果\" : \"\"}を踏まえて、最新の質問に対して包括的かつ情報豊富な回答を生成してください。\n${webSearchContent ? `\n以下の形式でMarkdown形式の参考文献リストを必ず含めてください:\n\n### 参考文献\n- [タイトル1](URL1)\n- [タイトル2](URL2)\n` : \"\"}`;\n        // Create OpenAI chat completion\n        const response = await openAI.chat.completions.create({\n            messages: [\n                {\n                    role: \"system\",\n                    content: `あなたは ${process.env.NEXT_PUBLIC_AI_NAME} です。ユーザーからの質問に対して日本語で丁寧に回答します。以下の指示に従ってください：\n\n1. 質問には会話の文脈を考慮しながら、正直かつ正確に答えてください。\n2. Web検索結果がある場合はそれを参考にしつつ、信頼性の高い情報を提供してください。\n3. Web検索結果がある場合は、回答の最後に「### 参考文献」という見出しを付け、その後に参照元を以下のMarkdown形式で列挙してください：\n   - [タイトルテキスト](URL)\n   - [タイトルテキスト](URL)\n4. 以前の会話内容と矛盾する情報を提供しないように注意してください。\n5. HTMLタグは一切使用せず、必ずMarkdown記法を使用してください。`\n                },\n                ...topHistory,\n                {\n                    role: \"user\",\n                    content: prompt\n                }\n            ],\n            model: \"gpt-4o-mini\",\n            stream: true,\n            max_tokens: 4000,\n            temperature: 0.7\n        });\n        // Stream the response\n        const stream = (0,ai__WEBPACK_IMPORTED_MODULE_6__.OpenAIStream)(response, {\n            async onCompletion (completion) {\n                await chatHistory.addMessage({\n                    content: completion,\n                    role: \"assistant\"\n                });\n            }\n        });\n        return new ai__WEBPACK_IMPORTED_MODULE_6__.StreamingTextResponse(stream);\n    } catch (error) {\n        console.error(\"ChatAPIWeb error:\", error);\n        return new Response(error instanceof Error ? error.message : \"An unknown error occurred.\", {\n            status: 500,\n            statusText: error instanceof Error ? error.toString() : \"Unknown Error\"\n        });\n    } finally{\n        if (browser) {\n            try {\n                await browser.close();\n            } catch (error) {\n                console.error(\"Error closing browser:\", error);\n            }\n        }\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-api-web.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-document-service.ts":
/*!**************************************************************!*\
  !*** ./features/chat/chat-services/chat-document-service.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FindAllChatDocuments: () => (/* binding */ FindAllChatDocuments),\n/* harmony export */   IndexDocuments: () => (/* binding */ IndexDocuments),\n/* harmony export */   UploadDocument: () => (/* binding */ UploadDocument),\n/* harmony export */   UpsertChatDocument: () => (/* binding */ UpsertChatDocument),\n/* harmony export */   ensureSearchIsConfigured: () => (/* binding */ ensureSearchIsConfigured),\n/* harmony export */   initDocumentIntelligence: () => (/* binding */ initDocumentIntelligence)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-proxy.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/action-encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _features_auth_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/features/auth/helpers */ \"(rsc)/./features/auth/helpers.ts\");\n/* harmony import */ var _features_common_cosmos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/features/common/cosmos */ \"(rsc)/./features/common/cosmos.ts\");\n/* harmony import */ var _features_common_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/features/common/util */ \"(rsc)/./features/common/util.ts\");\n/* harmony import */ var _azure_ai_form_recognizer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/ai-form-recognizer */ \"(rsc)/./node_modules/@azure/ai-form-recognizer/dist-esm/src/documentAnalysisClient.js\");\n/* harmony import */ var _azure_ai_form_recognizer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/ai-form-recognizer */ \"(rsc)/./node_modules/@azure/core-auth/dist/esm/index.js\");\n/* harmony import */ var _azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./azure-cog-search/azure-cog-vector-store */ \"(rsc)/./features/chat/chat-services/azure-cog-search/azure-cog-vector-store.ts\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./models */ \"(rsc)/./features/chat/chat-services/models.ts\");\n/* harmony import */ var _text_chunk__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./text-chunk */ \"(rsc)/./features/chat/chat-services/text-chunk.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils */ \"(rsc)/./features/chat/chat-services/utils.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"3ed3a7c813a32dfed57426c5a87630eb22177b87\":\"FindAllChatDocuments\",\"f70e3506ad8ca96d7621f3be0954d7525ac04dd1\":\"UpsertChatDocument\",\"a4366b94edba27f9780bfa2be1894b0699e9f1b6\":\"initDocumentIntelligence\",\"7a2db308b1a2de4b94ed4ef70caae1555227832a\":\"IndexDocuments\",\"6605521014016b4d9694fd1ac14a41d1c0529bc1\":\"ensureSearchIsConfigured\",\"d710fa70583a53699c17da17185f9fd719b43cff\":\"UploadDocument\"} */ \n\n\n\n\n\n\n\n\n\nconst MAX_DOCUMENT_SIZE = 20000000;\nconst UploadDocument = async (formData)=>{\n    try {\n        await ensureSearchIsConfigured();\n        const { docs } = await LoadFile(formData);\n        const splitDocuments = (0,_text_chunk__WEBPACK_IMPORTED_MODULE_7__.chunkDocumentWithOverlap)(docs.join(\"\\n\"));\n        return {\n            success: true,\n            error: \"\",\n            response: splitDocuments\n        };\n    } catch (e) {\n        return {\n            success: false,\n            error: e.message,\n            response: []\n        };\n    }\n};\nconst LoadFile = async (formData)=>{\n    try {\n        const file = formData.get(\"file\");\n        if (file && file.size < MAX_DOCUMENT_SIZE) {\n            const client = initDocumentIntelligence();\n            const blob = new Blob([\n                file\n            ], {\n                type: file.type\n            });\n            const poller = await client.beginAnalyzeDocument(\"prebuilt-read\", await blob.arrayBuffer());\n            const { paragraphs } = await poller.pollUntilDone();\n            const docs = [];\n            if (paragraphs) {\n                for (const paragraph of paragraphs){\n                    docs.push(paragraph.content);\n                }\n            }\n            return {\n                docs\n            };\n        }\n    } catch (e) {\n        const error = e;\n        if (error.details) {\n            if (error.details.length > 0) {\n                throw new Error(error.details[0].message);\n            } else {\n                throw new Error(error.details.error.innererror.message);\n            }\n        }\n        throw new Error(error.message);\n    }\n    throw new Error(\"Invalid file format or size. Only PDF files are supported.\");\n};\nconst IndexDocuments = async (fileName, docs, chatThreadId)=>{\n    try {\n        const documentsToIndex = [];\n        for (const doc of docs){\n            const docToAdd = {\n                id: (0,_features_common_util__WEBPACK_IMPORTED_MODULE_4__.uniqueId)(),\n                chatThreadId,\n                user: await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_2__.userHashedId)(),\n                pageContent: doc,\n                metadata: fileName,\n                chatType: \"data\",\n                deptName: \"\",\n                embedding: []\n            };\n            documentsToIndex.push(docToAdd);\n        }\n        await (0,_azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_5__.indexDocuments)(documentsToIndex);\n        await UpsertChatDocument(fileName, chatThreadId);\n        return {\n            success: true,\n            error: \"\",\n            response: documentsToIndex\n        };\n    } catch (e) {\n        console.log(e);\n        return {\n            success: false,\n            error: e.message,\n            response: []\n        };\n    }\n};\nconst initDocumentIntelligence = ()=>{\n    const client = new _azure_ai_form_recognizer__WEBPACK_IMPORTED_MODULE_9__.DocumentAnalysisClient(process.env.AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT, new _azure_ai_form_recognizer__WEBPACK_IMPORTED_MODULE_10__.AzureKeyCredential(process.env.AZURE_DOCUMENT_INTELLIGENCE_KEY));\n    return client;\n};\nconst FindAllChatDocuments = async (chatThreadID)=>{\n    const container = await _features_common_cosmos__WEBPACK_IMPORTED_MODULE_3__.CosmosDBContainer.getInstance().getContainer();\n    const querySpec = {\n        query: \"SELECT * FROM root r WHERE r.type=@type AND r.chatThreadId = @threadId AND r.isDeleted=@isDeleted\",\n        parameters: [\n            {\n                name: \"@type\",\n                value: _models__WEBPACK_IMPORTED_MODULE_6__.CHAT_DOCUMENT_ATTRIBUTE\n            },\n            {\n                name: \"@threadId\",\n                value: chatThreadID\n            },\n            {\n                name: \"@isDeleted\",\n                value: false\n            }\n        ]\n    };\n    const { resources } = await container.items.query(querySpec).fetchAll();\n    return resources;\n};\nconst UpsertChatDocument = async (fileName, chatThreadID)=>{\n    const modelToSave = {\n        chatThreadId: chatThreadID,\n        id: (0,_features_common_util__WEBPACK_IMPORTED_MODULE_4__.uniqueId)(),\n        userId: await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_2__.userHashedId)(),\n        createdAt: new Date(),\n        type: _models__WEBPACK_IMPORTED_MODULE_6__.CHAT_DOCUMENT_ATTRIBUTE,\n        isDeleted: false,\n        name: fileName\n    };\n    const container = await _features_common_cosmos__WEBPACK_IMPORTED_MODULE_3__.CosmosDBContainer.getInstance().getContainer();\n    await container.items.upsert(modelToSave);\n};\nconst ensureSearchIsConfigured = async ()=>{\n    var isSearchConfigured = (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isNotNullOrEmpty)(process.env.AZURE_SEARCH_NAME) && (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isNotNullOrEmpty)(process.env.AZURE_SEARCH_API_KEY) && (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isNotNullOrEmpty)(process.env.AZURE_SEARCH_INDEX_NAME) && (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isNotNullOrEmpty)(process.env.AZURE_SEARCH_API_VERSION);\n    if (!isSearchConfigured) {\n        throw new Error(\"Azure search environment variables are not configured.\");\n    }\n    var isDocumentIntelligenceConfigured = (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isNotNullOrEmpty)(process.env.AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT) && (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isNotNullOrEmpty)(process.env.AZURE_DOCUMENT_INTELLIGENCE_KEY);\n    if (!isDocumentIntelligenceConfigured) {\n        throw new Error(\"Azure document intelligence environment variables are not configured.\");\n    }\n    var isEmbeddingsConfigured = (0,_utils__WEBPACK_IMPORTED_MODULE_8__.isNotNullOrEmpty)(process.env.AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME);\n    if (!isEmbeddingsConfigured) {\n        throw new Error(\"Azure openai embedding variables are not configured.\");\n    }\n    await (0,_azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_5__.ensureIndexIsCreated)();\n};\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_11__.ensureServerEntryExports)([\n    UploadDocument,\n    IndexDocuments,\n    initDocumentIntelligence,\n    FindAllChatDocuments,\n    UpsertChatDocument,\n    ensureSearchIsConfigured\n]);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"d710fa70583a53699c17da17185f9fd719b43cff\", null, UploadDocument);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"7a2db308b1a2de4b94ed4ef70caae1555227832a\", null, IndexDocuments);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"a4366b94edba27f9780bfa2be1894b0699e9f1b6\", null, initDocumentIntelligence);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"3ed3a7c813a32dfed57426c5a87630eb22177b87\", null, FindAllChatDocuments);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"f70e3506ad8ca96d7621f3be0954d7525ac04dd1\", null, UpsertChatDocument);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"6605521014016b4d9694fd1ac14a41d1c0529bc1\", null, ensureSearchIsConfigured);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-document-service.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-service.ts":
/*!*****************************************************!*\
  !*** ./features/chat/chat-services/chat-service.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FindAllChats: () => (/* binding */ FindAllChats),\n/* harmony export */   UpsertChat: () => (/* binding */ UpsertChat),\n/* harmony export */   insertPromptAndResponse: () => (/* binding */ insertPromptAndResponse),\n/* harmony export */   newChatModel: () => (/* binding */ newChatModel)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-proxy.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/action-encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var server_only__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! server-only */ \"(rsc)/./node_modules/next/dist/compiled/server-only/empty.js\");\n/* harmony import */ var server_only__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(server_only__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _features_common_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/features/common/util */ \"(rsc)/./features/common/util.ts\");\n/* harmony import */ var _common_cosmos__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/cosmos */ \"(rsc)/./features/common/cosmos.ts\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./models */ \"(rsc)/./features/chat/chat-services/models.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"07c1073cf1086ebb6d2d4b1eff44b7e7817fcfe6\":\"UpsertChat\",\"0f492307da439ab312517e5480d53e71b61eec4d\":\"FindAllChats\",\"2835df36eafbd78afd9f89858e2343806dc36b64\":\"insertPromptAndResponse\",\"05e054cb9be818bed79166760537e2c21020e629\":\"newChatModel\"} */ \n\n\n\n\n\nconst FindAllChats = async (chatThreadID)=>{\n    const container = await _common_cosmos__WEBPACK_IMPORTED_MODULE_4__.CosmosDBContainer.getInstance().getContainer();\n    const querySpec = {\n        query: \"SELECT * FROM root r WHERE r.type=@type AND r.threadId = @threadId AND r.isDeleted=@isDeleted\",\n        parameters: [\n            {\n                name: \"@type\",\n                value: _models__WEBPACK_IMPORTED_MODULE_5__.MESSAGE_ATTRIBUTE\n            },\n            {\n                name: \"@threadId\",\n                value: chatThreadID\n            },\n            {\n                name: \"@isDeleted\",\n                value: false\n            }\n        ]\n    };\n    const { resources } = await container.items.query(querySpec).fetchAll();\n    return resources;\n};\nconst UpsertChat = async (chatModel)=>{\n    const modelToSave = {\n        ...chatModel,\n        id: (0,_features_common_util__WEBPACK_IMPORTED_MODULE_3__.uniqueId)(),\n        createdAt: new Date(),\n        type: _models__WEBPACK_IMPORTED_MODULE_5__.MESSAGE_ATTRIBUTE,\n        isDeleted: false\n    };\n    const container = await _common_cosmos__WEBPACK_IMPORTED_MODULE_4__.CosmosDBContainer.getInstance().getContainer();\n    await container.items.upsert(modelToSave);\n};\nconst insertPromptAndResponse = async (threadID, userQuestion, assistantResponse)=>{\n    await UpsertChat({\n        ...newChatModel(),\n        content: userQuestion,\n        threadId: threadID,\n        role: \"user\"\n    });\n    await UpsertChat({\n        ...newChatModel(),\n        content: assistantResponse,\n        threadId: threadID,\n        role: \"assistant\"\n    });\n};\nconst newChatModel = ()=>{\n    return {\n        content: \"\",\n        threadId: \"\",\n        role: \"user\",\n        userId: \"\",\n        id: (0,_features_common_util__WEBPACK_IMPORTED_MODULE_3__.uniqueId)(),\n        createdAt: new Date(),\n        type: _models__WEBPACK_IMPORTED_MODULE_5__.MESSAGE_ATTRIBUTE,\n        isDeleted: false,\n        context: \"\"\n    };\n};\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_6__.ensureServerEntryExports)([\n    FindAllChats,\n    UpsertChat,\n    insertPromptAndResponse,\n    newChatModel\n]);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"0f492307da439ab312517e5480d53e71b61eec4d\", null, FindAllChats);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"07c1073cf1086ebb6d2d4b1eff44b7e7817fcfe6\", null, UpsertChat);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"2835df36eafbd78afd9f89858e2343806dc36b64\", null, insertPromptAndResponse);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"05e054cb9be818bed79166760537e2c21020e629\", null, newChatModel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvY2hhdC1zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNxQjtBQUU2QjtBQUVNO0FBQ087QUFFeEQsTUFBTUcsZUFBZSxPQUFPQztJQUNqQyxNQUFNQyxZQUFZLE1BQU1KLDZEQUFpQkEsQ0FBQ0ssV0FBVyxHQUFHQyxZQUFZO0lBRXBFLE1BQU1DLFlBQTBCO1FBQzlCQyxPQUNFO1FBQ0ZDLFlBQVk7WUFDVjtnQkFDRUMsTUFBTTtnQkFDTkMsT0FBT1Ysc0RBQWlCQTtZQUMxQjtZQUNBO2dCQUNFUyxNQUFNO2dCQUNOQyxPQUFPUjtZQUNUO1lBQ0E7Z0JBQ0VPLE1BQU07Z0JBQ05DLE9BQU87WUFDVDtTQUNEO0lBQ0g7SUFFQSxNQUFNLEVBQUVDLFNBQVMsRUFBRSxHQUFHLE1BQU1SLFVBQVVTLEtBQUssQ0FDeENMLEtBQUssQ0FBbUJELFdBQ3hCTyxRQUFRO0lBRVgsT0FBT0Y7QUFDVCxFQUFFO0FBRUssTUFBTUcsYUFBYSxPQUFPQztJQUMvQixNQUFNQyxjQUFnQztRQUNwQyxHQUFHRCxTQUFTO1FBQ1pFLElBQUluQiwrREFBUUE7UUFDWm9CLFdBQVcsSUFBSUM7UUFDZkMsTUFBTXBCLHNEQUFpQkE7UUFDdkJxQixXQUFXO0lBQ2I7SUFFQSxNQUFNbEIsWUFBWSxNQUFNSiw2REFBaUJBLENBQUNLLFdBQVcsR0FBR0MsWUFBWTtJQUNwRSxNQUFNRixVQUFVUyxLQUFLLENBQUNVLE1BQU0sQ0FBQ047QUFDL0IsRUFBRTtBQUVLLE1BQU1PLDBCQUEwQixPQUNyQ0MsVUFDQUMsY0FDQUM7SUFFQSxNQUFNWixXQUFXO1FBQ2YsR0FBR2EsY0FBYztRQUNqQkMsU0FBU0g7UUFDVEksVUFBVUw7UUFDVk0sTUFBTTtJQUNSO0lBQ0EsTUFBTWhCLFdBQVc7UUFDZixHQUFHYSxjQUFjO1FBQ2pCQyxTQUFTRjtRQUNURyxVQUFVTDtRQUNWTSxNQUFNO0lBQ1I7QUFDRixFQUFFO0FBRUssTUFBTUgsZUFBZTtJQUMxQixPQUFPO1FBQ0xDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxNQUFNO1FBQ05DLFFBQVE7UUFDUmQsSUFBSW5CLCtEQUFRQTtRQUNab0IsV0FBVyxJQUFJQztRQUNmQyxNQUFNcEIsc0RBQWlCQTtRQUN2QnFCLFdBQVc7UUFDWFcsU0FBUztJQUNYO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2F6dXJlLW9wZW4tYWktYWNjZWxlcmF0b3IvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvY2hhdC1zZXJ2aWNlLnRzP2JmODMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc2VydmVyXCI7XG5pbXBvcnQgXCJzZXJ2ZXItb25seVwiO1xuXG5pbXBvcnQgeyB1bmlxdWVJZCB9IGZyb20gXCJAL2ZlYXR1cmVzL2NvbW1vbi91dGlsXCI7XG5pbXBvcnQgeyBTcWxRdWVyeVNwZWMgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuaW1wb3J0IHsgQ29zbW9zREJDb250YWluZXIgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2Nvc21vc1wiO1xuaW1wb3J0IHsgQ2hhdE1lc3NhZ2VNb2RlbCwgTUVTU0FHRV9BVFRSSUJVVEUgfSBmcm9tIFwiLi9tb2RlbHNcIjtcblxuZXhwb3J0IGNvbnN0IEZpbmRBbGxDaGF0cyA9IGFzeW5jIChjaGF0VGhyZWFkSUQ6IHN0cmluZykgPT4ge1xuICBjb25zdCBjb250YWluZXIgPSBhd2FpdCBDb3Ntb3NEQkNvbnRhaW5lci5nZXRJbnN0YW5jZSgpLmdldENvbnRhaW5lcigpO1xuXG4gIGNvbnN0IHF1ZXJ5U3BlYzogU3FsUXVlcnlTcGVjID0ge1xuICAgIHF1ZXJ5OlxuICAgICAgXCJTRUxFQ1QgKiBGUk9NIHJvb3QgciBXSEVSRSByLnR5cGU9QHR5cGUgQU5EIHIudGhyZWFkSWQgPSBAdGhyZWFkSWQgQU5EIHIuaXNEZWxldGVkPUBpc0RlbGV0ZWRcIixcbiAgICBwYXJhbWV0ZXJzOiBbXG4gICAgICB7XG4gICAgICAgIG5hbWU6IFwiQHR5cGVcIixcbiAgICAgICAgdmFsdWU6IE1FU1NBR0VfQVRUUklCVVRFLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogXCJAdGhyZWFkSWRcIixcbiAgICAgICAgdmFsdWU6IGNoYXRUaHJlYWRJRCxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6IFwiQGlzRGVsZXRlZFwiLFxuICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICB9LFxuICAgIF0sXG4gIH07XG5cbiAgY29uc3QgeyByZXNvdXJjZXMgfSA9IGF3YWl0IGNvbnRhaW5lci5pdGVtc1xuICAgIC5xdWVyeTxDaGF0TWVzc2FnZU1vZGVsPihxdWVyeVNwZWMpXG4gICAgLmZldGNoQWxsKCk7XG5cbiAgcmV0dXJuIHJlc291cmNlcztcbn07XG5cbmV4cG9ydCBjb25zdCBVcHNlcnRDaGF0ID0gYXN5bmMgKGNoYXRNb2RlbDogQ2hhdE1lc3NhZ2VNb2RlbCkgPT4ge1xuICBjb25zdCBtb2RlbFRvU2F2ZTogQ2hhdE1lc3NhZ2VNb2RlbCA9IHtcbiAgICAuLi5jaGF0TW9kZWwsXG4gICAgaWQ6IHVuaXF1ZUlkKCksXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgIHR5cGU6IE1FU1NBR0VfQVRUUklCVVRFLFxuICAgIGlzRGVsZXRlZDogZmFsc2UsXG4gIH07XG5cbiAgY29uc3QgY29udGFpbmVyID0gYXdhaXQgQ29zbW9zREJDb250YWluZXIuZ2V0SW5zdGFuY2UoKS5nZXRDb250YWluZXIoKTtcbiAgYXdhaXQgY29udGFpbmVyLml0ZW1zLnVwc2VydChtb2RlbFRvU2F2ZSk7XG59O1xuXG5leHBvcnQgY29uc3QgaW5zZXJ0UHJvbXB0QW5kUmVzcG9uc2UgPSBhc3luYyAoXG4gIHRocmVhZElEOiBzdHJpbmcsXG4gIHVzZXJRdWVzdGlvbjogc3RyaW5nLFxuICBhc3Npc3RhbnRSZXNwb25zZTogc3RyaW5nXG4pID0+IHtcbiAgYXdhaXQgVXBzZXJ0Q2hhdCh7XG4gICAgLi4ubmV3Q2hhdE1vZGVsKCksXG4gICAgY29udGVudDogdXNlclF1ZXN0aW9uLFxuICAgIHRocmVhZElkOiB0aHJlYWRJRCxcbiAgICByb2xlOiBcInVzZXJcIixcbiAgfSk7XG4gIGF3YWl0IFVwc2VydENoYXQoe1xuICAgIC4uLm5ld0NoYXRNb2RlbCgpLFxuICAgIGNvbnRlbnQ6IGFzc2lzdGFudFJlc3BvbnNlLFxuICAgIHRocmVhZElkOiB0aHJlYWRJRCxcbiAgICByb2xlOiBcImFzc2lzdGFudFwiLFxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBuZXdDaGF0TW9kZWwgPSAoKTogQ2hhdE1lc3NhZ2VNb2RlbCA9PiB7XG4gIHJldHVybiB7XG4gICAgY29udGVudDogXCJcIixcbiAgICB0aHJlYWRJZDogXCJcIixcbiAgICByb2xlOiBcInVzZXJcIixcbiAgICB1c2VySWQ6IFwiXCIsXG4gICAgaWQ6IHVuaXF1ZUlkKCksXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgIHR5cGU6IE1FU1NBR0VfQVRUUklCVVRFLFxuICAgIGlzRGVsZXRlZDogZmFsc2UsXG4gICAgY29udGV4dDogXCJcIixcbiAgfTtcbn07XG4iXSwibmFtZXMiOlsidW5pcXVlSWQiLCJDb3Ntb3NEQkNvbnRhaW5lciIsIk1FU1NBR0VfQVRUUklCVVRFIiwiRmluZEFsbENoYXRzIiwiY2hhdFRocmVhZElEIiwiY29udGFpbmVyIiwiZ2V0SW5zdGFuY2UiLCJnZXRDb250YWluZXIiLCJxdWVyeVNwZWMiLCJxdWVyeSIsInBhcmFtZXRlcnMiLCJuYW1lIiwidmFsdWUiLCJyZXNvdXJjZXMiLCJpdGVtcyIsImZldGNoQWxsIiwiVXBzZXJ0Q2hhdCIsImNoYXRNb2RlbCIsIm1vZGVsVG9TYXZlIiwiaWQiLCJjcmVhdGVkQXQiLCJEYXRlIiwidHlwZSIsImlzRGVsZXRlZCIsInVwc2VydCIsImluc2VydFByb21wdEFuZFJlc3BvbnNlIiwidGhyZWFkSUQiLCJ1c2VyUXVlc3Rpb24iLCJhc3Npc3RhbnRSZXNwb25zZSIsIm5ld0NoYXRNb2RlbCIsImNvbnRlbnQiLCJ0aHJlYWRJZCIsInJvbGUiLCJ1c2VySWQiLCJjb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-service.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/chat-thread-service.ts":
/*!************************************************************!*\
  !*** ./features/chat/chat-services/chat-thread-service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateChatThread: () => (/* binding */ CreateChatThread),\n/* harmony export */   EnsureChatThreadIsForCurrentUser: () => (/* binding */ EnsureChatThreadIsForCurrentUser),\n/* harmony export */   FindAllChatThreadForCurrentUser: () => (/* binding */ FindAllChatThreadForCurrentUser),\n/* harmony export */   FindChatThreadByID: () => (/* binding */ FindChatThreadByID),\n/* harmony export */   SoftDeleteChatThreadByID: () => (/* binding */ SoftDeleteChatThreadByID),\n/* harmony export */   UpsertChatThread: () => (/* binding */ UpsertChatThread),\n/* harmony export */   initAndGuardChatSession: () => (/* binding */ initAndGuardChatSession),\n/* harmony export */   updateChatThreadTitle: () => (/* binding */ updateChatThreadTitle)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-proxy.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/action-encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var server_only__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! server-only */ \"(rsc)/./node_modules/next/dist/compiled/server-only/empty.js\");\n/* harmony import */ var server_only__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(server_only__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _features_auth_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/features/auth/helpers */ \"(rsc)/./features/auth/helpers.ts\");\n/* harmony import */ var _features_chat_chat_services_chat_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/features/chat/chat-services/chat-service */ \"(rsc)/./features/chat/chat-services/chat-service.ts\");\n/* harmony import */ var _features_common_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/features/common/util */ \"(rsc)/./features/common/util.ts\");\n/* harmony import */ var _common_cosmos__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/cosmos */ \"(rsc)/./features/common/cosmos.ts\");\n/* harmony import */ var _azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./azure-cog-search/azure-cog-vector-store */ \"(rsc)/./features/chat/chat-services/azure-cog-search/azure-cog-vector-store.ts\");\n/* harmony import */ var _chat_document_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./chat-document-service */ \"(rsc)/./features/chat/chat-services/chat-document-service.ts\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./models */ \"(rsc)/./features/chat/chat-services/models.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"c5b7b86eccd7bae4c4dc3380c22ed79450dd44c3\":\"EnsureChatThreadIsForCurrentUser\",\"45f818ae7fe7b3a853d519d9b2a8a198e8eb7a16\":\"UpsertChatThread\",\"d6ee201894799a6d50cb53bf33a95394cd01fee0\":\"SoftDeleteChatThreadByID\",\"9893aea81a6e5df6cd1d63b84f65c4c0b17ef12c\":\"CreateChatThread\",\"6e6c88022fa2144a3ae634ce4a884f74576cc14b\":\"FindChatThreadByID\",\"26076f7fcd7b5d42b550a2ef92726c56e0189a6c\":\"FindAllChatThreadForCurrentUser\",\"47003156cc76a4fd663055682c90c06c6cb7767e\":\"updateChatThreadTitle\",\"6b35266a524bde73522540e44d018e4c70cbaba8\":\"initAndGuardChatSession\"} */ \n\n\n\n\n\n\n\n\n\nconst FindAllChatThreadForCurrentUser = async ()=>{\n    const container = await _common_cosmos__WEBPACK_IMPORTED_MODULE_6__.CosmosDBContainer.getInstance().getContainer();\n    const querySpec = {\n        query: \"SELECT * FROM root r WHERE r.type=@type AND r.userId=@userId AND r.isDeleted=@isDeleted ORDER BY r.createdAt DESC\",\n        parameters: [\n            {\n                name: \"@type\",\n                value: _models__WEBPACK_IMPORTED_MODULE_9__.CHAT_THREAD_ATTRIBUTE\n            },\n            {\n                name: \"@userId\",\n                value: await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_3__.userHashedId)()\n            },\n            {\n                name: \"@isDeleted\",\n                value: false\n            }\n        ]\n    };\n    const { resources } = await container.items.query(querySpec, {\n        partitionKey: await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_3__.userHashedId)()\n    }).fetchAll();\n    return resources;\n};\nconst FindChatThreadByID = async (id)=>{\n    const container = await _common_cosmos__WEBPACK_IMPORTED_MODULE_6__.CosmosDBContainer.getInstance().getContainer();\n    const querySpec = {\n        query: \"SELECT * FROM root r WHERE r.type=@type AND r.userId=@userId AND r.id=@id AND r.isDeleted=@isDeleted\",\n        parameters: [\n            {\n                name: \"@type\",\n                value: _models__WEBPACK_IMPORTED_MODULE_9__.CHAT_THREAD_ATTRIBUTE\n            },\n            {\n                name: \"@userId\",\n                value: await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_3__.userHashedId)()\n            },\n            {\n                name: \"@id\",\n                value: id\n            },\n            {\n                name: \"@isDeleted\",\n                value: false\n            }\n        ]\n    };\n    const { resources } = await container.items.query(querySpec).fetchAll();\n    return resources;\n};\nconst SoftDeleteChatThreadByID = async (chatThreadID)=>{\n    const container = await _common_cosmos__WEBPACK_IMPORTED_MODULE_6__.CosmosDBContainer.getInstance().getContainer();\n    const threads = await FindChatThreadByID(chatThreadID);\n    if (threads.length !== 0) {\n        const chats = await (0,_features_chat_chat_services_chat_service__WEBPACK_IMPORTED_MODULE_4__.FindAllChats)(chatThreadID);\n        chats.forEach(async (chat)=>{\n            const itemToUpdate = {\n                ...chat\n            };\n            itemToUpdate.isDeleted = true;\n            await container.items.upsert(itemToUpdate);\n        });\n        const chatDocuments = await (0,_chat_document_service__WEBPACK_IMPORTED_MODULE_8__.FindAllChatDocuments)(chatThreadID);\n        if (chatDocuments.length !== 0) {\n            await (0,_azure_cog_search_azure_cog_vector_store__WEBPACK_IMPORTED_MODULE_7__.deleteDocuments)(chatThreadID);\n        }\n        chatDocuments.forEach(async (chatDocument)=>{\n            const itemToUpdate = {\n                ...chatDocument\n            };\n            itemToUpdate.isDeleted = true;\n            await container.items.upsert(itemToUpdate);\n        });\n        threads.forEach(async (thread)=>{\n            const itemToUpdate = {\n                ...thread\n            };\n            itemToUpdate.isDeleted = true;\n            await container.items.upsert(itemToUpdate);\n        });\n    }\n};\nconst EnsureChatThreadIsForCurrentUser = async (chatThreadID)=>{\n    const modelToSave = await FindChatThreadByID(chatThreadID);\n    if (modelToSave.length === 0) {\n        throw new Error(\"Chat thread not found\");\n    }\n    return modelToSave[0];\n};\nconst UpsertChatThread = async (chatThread)=>{\n    const container = await _common_cosmos__WEBPACK_IMPORTED_MODULE_6__.CosmosDBContainer.getInstance().getContainer();\n    const updatedChatThread = await container.items.upsert(chatThread);\n    if (updatedChatThread === undefined) {\n        throw new Error(\"Chat thread not found\");\n    }\n    return updatedChatThread;\n};\nconst updateChatThreadTitle = async (chatThread, messages, chatType, conversationStyle, chatAPIModel, chatOverFileName, userMessage)=>{\n    if (messages.length === 0) {\n        const updatedChatThread = await UpsertChatThread({\n            ...chatThread,\n            chatType: chatType,\n            chatOverFileName: chatOverFileName,\n            chatAPIModel: chatAPIModel,\n            conversationStyle: conversationStyle,\n            name: userMessage.substring(0, 30)\n        });\n        return updatedChatThread.resource;\n    }\n    return chatThread;\n};\nconst CreateChatThread = async ()=>{\n    const modelToSave = {\n        name: \"new chat\",\n        useName: (await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_3__.userSession)()).name,\n        userId: await (0,_features_auth_helpers__WEBPACK_IMPORTED_MODULE_3__.userHashedId)(),\n        id: (0,_features_common_util__WEBPACK_IMPORTED_MODULE_5__.uniqueId)(),\n        createdAt: new Date(),\n        isDeleted: false,\n        chatType: \"simple\",\n        conversationStyle: \"balanced\",\n        chatAPIModel: \"Current_Version\",\n        type: _models__WEBPACK_IMPORTED_MODULE_9__.CHAT_THREAD_ATTRIBUTE,\n        chatOverFileName: \"\",\n        chatDoc: \"\"\n    };\n    const container = await _common_cosmos__WEBPACK_IMPORTED_MODULE_6__.CosmosDBContainer.getInstance().getContainer();\n    const response = await container.items.create(modelToSave);\n    return response.resource;\n};\nconst initAndGuardChatSession = async (props)=>{\n    //export const initAndGuardChatSession = async () => {\n    const { messages, id, chatType, conversationStyle, chatAPIModel, chatOverFileName } = props;\n    //last message\n    const lastHumanMessage = messages[messages.length - 1];\n    const currentChatThread = await EnsureChatThreadIsForCurrentUser(id);\n    const chats = await (0,_features_chat_chat_services_chat_service__WEBPACK_IMPORTED_MODULE_4__.FindAllChats)(id);\n    const chatThread = await updateChatThreadTitle(currentChatThread, chats, chatType, conversationStyle, chatAPIModel, chatOverFileName, lastHumanMessage.content);\n    return {\n        id,\n        lastHumanMessage,\n        chats,\n        chatThread\n    };\n};\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_10__.ensureServerEntryExports)([\n    FindAllChatThreadForCurrentUser,\n    FindChatThreadByID,\n    SoftDeleteChatThreadByID,\n    EnsureChatThreadIsForCurrentUser,\n    UpsertChatThread,\n    updateChatThreadTitle,\n    CreateChatThread,\n    initAndGuardChatSession\n]);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"26076f7fcd7b5d42b550a2ef92726c56e0189a6c\", null, FindAllChatThreadForCurrentUser);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"6e6c88022fa2144a3ae634ce4a884f74576cc14b\", null, FindChatThreadByID);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"d6ee201894799a6d50cb53bf33a95394cd01fee0\", null, SoftDeleteChatThreadByID);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"c5b7b86eccd7bae4c4dc3380c22ed79450dd44c3\", null, EnsureChatThreadIsForCurrentUser);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"45f818ae7fe7b3a853d519d9b2a8a198e8eb7a16\", null, UpsertChatThread);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"47003156cc76a4fd663055682c90c06c6cb7767e\", null, updateChatThreadTitle);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"9893aea81a6e5df6cd1d63b84f65c4c0b17ef12c\", null, CreateChatThread);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"6b35266a524bde73522540e44d018e4c70cbaba8\", null, initAndGuardChatSession);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/chat-thread-service.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/cosmosdb/cosmosdb.ts":
/*!**********************************************************!*\
  !*** ./features/chat/chat-services/cosmosdb/cosmosdb.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosDBChatMessageHistory: () => (/* binding */ CosmosDBChatMessageHistory)\n/* harmony export */ });\n/* harmony import */ var _features_chat_chat_services_chat_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/features/chat/chat-services/chat-service */ \"(rsc)/./features/chat/chat-services/chat-service.ts\");\n/* harmony import */ var _features_chat_chat_services_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/features/chat/chat-services/models */ \"(rsc)/./features/chat/chat-services/models.ts\");\n/* harmony import */ var _features_common_cosmos__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/features/common/cosmos */ \"(rsc)/./features/common/cosmos.ts\");\n/* harmony import */ var _features_common_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/features/common/util */ \"(rsc)/./features/common/util.ts\");\n\n\n\n\nclass CosmosDBChatMessageHistory {\n    constructor({ sessionId, userId }){\n        this.sessionId = sessionId;\n        this.userId = userId;\n    }\n    async getMessages() {\n        const chats = await (0,_features_chat_chat_services_chat_service__WEBPACK_IMPORTED_MODULE_0__.FindAllChats)(this.sessionId);\n        return mapOpenAIChatMessages(chats);\n    }\n    async clear() {\n        const container = await _features_common_cosmos__WEBPACK_IMPORTED_MODULE_2__.CosmosDBContainer.getInstance().getContainer();\n        await container.delete();\n    }\n    async addMessage(message, citations = \"\") {\n        const modelToSave = {\n            id: (0,_features_common_util__WEBPACK_IMPORTED_MODULE_3__.uniqueId)(),\n            createdAt: new Date(),\n            type: _features_chat_chat_services_models__WEBPACK_IMPORTED_MODULE_1__.MESSAGE_ATTRIBUTE,\n            isDeleted: false,\n            content: message.content ?? \"\",\n            role: message.role,\n            threadId: this.sessionId,\n            userId: this.userId,\n            context: citations\n        };\n        await (0,_features_chat_chat_services_chat_service__WEBPACK_IMPORTED_MODULE_0__.UpsertChat)(modelToSave);\n    }\n}\nfunction mapOpenAIChatMessages(messages) {\n    return messages.map((message)=>{\n        return {\n            role: message.role,\n            content: message.content\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvY29zbW9zZGIvY29zbW9zZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHb0Q7QUFJTjtBQUNlO0FBQ1g7QUFRM0MsTUFBTUs7SUFJWEMsWUFBWSxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBb0MsQ0FBRTtRQUNuRSxJQUFJLENBQUNELFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBO0lBQ2hCO0lBRUEsTUFBTUMsY0FBZ0Q7UUFDcEQsTUFBTUMsUUFBUSxNQUFNVix1RkFBWUEsQ0FBQyxJQUFJLENBQUNPLFNBQVM7UUFDL0MsT0FBT0ksc0JBQXNCRDtJQUMvQjtJQUVBLE1BQU1FLFFBQXVCO1FBQzNCLE1BQU1DLFlBQVksTUFBTVYsc0VBQWlCQSxDQUFDVyxXQUFXLEdBQUdDLFlBQVk7UUFDcEUsTUFBTUYsVUFBVUcsTUFBTTtJQUN4QjtJQUVBLE1BQU1DLFdBQVdDLE9BQThCLEVBQUVDLFlBQW9CLEVBQUUsRUFBRTtRQUN2RSxNQUFNQyxjQUFnQztZQUNwQ0MsSUFBSWpCLCtEQUFRQTtZQUNaa0IsV0FBVyxJQUFJQztZQUNmQyxNQUFNdEIsa0ZBQWlCQTtZQUN2QnVCLFdBQVc7WUFDWEMsU0FBU1IsUUFBUVEsT0FBTyxJQUFJO1lBQzVCQyxNQUFNVCxRQUFRUyxJQUFJO1lBQ2xCQyxVQUFVLElBQUksQ0FBQ3JCLFNBQVM7WUFDeEJDLFFBQVEsSUFBSSxDQUFDQSxNQUFNO1lBQ25CcUIsU0FBU1Y7UUFDWDtRQUVBLE1BQU1sQixxRkFBVUEsQ0FBQ21CO0lBQ25CO0FBQ0Y7QUFFQSxTQUFTVCxzQkFDUG1CLFFBQTRCO0lBRTVCLE9BQU9BLFNBQVNDLEdBQUcsQ0FBQyxDQUFDYjtRQUNuQixPQUFPO1lBQ0xTLE1BQU1ULFFBQVFTLElBQUk7WUFDbEJELFNBQVNSLFFBQVFRLE9BQU87UUFDMUI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXp1cmUtb3Blbi1haS1hY2NlbGVyYXRvci8uL2ZlYXR1cmVzL2NoYXQvY2hhdC1zZXJ2aWNlcy9jb3Ntb3NkYi9jb3Ntb3NkYi50cz8zYjA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEZpbmRBbGxDaGF0cyxcbiAgVXBzZXJ0Q2hhdCxcbn0gZnJvbSBcIkAvZmVhdHVyZXMvY2hhdC9jaGF0LXNlcnZpY2VzL2NoYXQtc2VydmljZVwiO1xuaW1wb3J0IHtcbiAgQ2hhdE1lc3NhZ2VNb2RlbCxcbiAgTUVTU0FHRV9BVFRSSUJVVEUsXG59IGZyb20gXCJAL2ZlYXR1cmVzL2NoYXQvY2hhdC1zZXJ2aWNlcy9tb2RlbHNcIjtcbmltcG9ydCB7IENvc21vc0RCQ29udGFpbmVyIH0gZnJvbSBcIkAvZmVhdHVyZXMvY29tbW9uL2Nvc21vc1wiO1xuaW1wb3J0IHsgdW5pcXVlSWQgfSBmcm9tIFwiQC9mZWF0dXJlcy9jb21tb24vdXRpbFwiO1xuaW1wb3J0IHsgQ2hhdENvbXBsZXRpb25NZXNzYWdlIH0gZnJvbSBcIm9wZW5haS9yZXNvdXJjZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb3Ntb3NEQkNoYXRNZXNzYWdlSGlzdG9yeUZpZWxkcyB7XG4gIHNlc3Npb25JZDogc3RyaW5nO1xuICB1c2VySWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIENvc21vc0RCQ2hhdE1lc3NhZ2VIaXN0b3J5IHtcbiAgcHJpdmF0ZSBzZXNzaW9uSWQ6IHN0cmluZztcbiAgcHJpdmF0ZSB1c2VySWQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcih7IHNlc3Npb25JZCwgdXNlcklkIH06IENvc21vc0RCQ2hhdE1lc3NhZ2VIaXN0b3J5RmllbGRzKSB7XG4gICAgdGhpcy5zZXNzaW9uSWQgPSBzZXNzaW9uSWQ7XG4gICAgdGhpcy51c2VySWQgPSB1c2VySWQ7XG4gIH1cblxuICBhc3luYyBnZXRNZXNzYWdlcygpOiBQcm9taXNlPENoYXRDb21wbGV0aW9uTWVzc2FnZVtdPiB7XG4gICAgY29uc3QgY2hhdHMgPSBhd2FpdCBGaW5kQWxsQ2hhdHModGhpcy5zZXNzaW9uSWQpO1xuICAgIHJldHVybiBtYXBPcGVuQUlDaGF0TWVzc2FnZXMoY2hhdHMpO1xuICB9XG5cbiAgYXN5bmMgY2xlYXIoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgY29udGFpbmVyID0gYXdhaXQgQ29zbW9zREJDb250YWluZXIuZ2V0SW5zdGFuY2UoKS5nZXRDb250YWluZXIoKTtcbiAgICBhd2FpdCBjb250YWluZXIuZGVsZXRlKCk7XG4gIH1cblxuICBhc3luYyBhZGRNZXNzYWdlKG1lc3NhZ2U6IENoYXRDb21wbGV0aW9uTWVzc2FnZSwgY2l0YXRpb25zOiBzdHJpbmcgPSBcIlwiKSB7XG4gICAgY29uc3QgbW9kZWxUb1NhdmU6IENoYXRNZXNzYWdlTW9kZWwgPSB7XG4gICAgICBpZDogdW5pcXVlSWQoKSxcbiAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcbiAgICAgIHR5cGU6IE1FU1NBR0VfQVRUUklCVVRFLFxuICAgICAgaXNEZWxldGVkOiBmYWxzZSxcbiAgICAgIGNvbnRlbnQ6IG1lc3NhZ2UuY29udGVudCA/PyBcIlwiLFxuICAgICAgcm9sZTogbWVzc2FnZS5yb2xlLFxuICAgICAgdGhyZWFkSWQ6IHRoaXMuc2Vzc2lvbklkLFxuICAgICAgdXNlcklkOiB0aGlzLnVzZXJJZCxcbiAgICAgIGNvbnRleHQ6IGNpdGF0aW9ucyxcbiAgICB9O1xuXG4gICAgYXdhaXQgVXBzZXJ0Q2hhdChtb2RlbFRvU2F2ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWFwT3BlbkFJQ2hhdE1lc3NhZ2VzKFxuICBtZXNzYWdlczogQ2hhdE1lc3NhZ2VNb2RlbFtdXG4pOiBDaGF0Q29tcGxldGlvbk1lc3NhZ2VbXSB7XG4gIHJldHVybiBtZXNzYWdlcy5tYXAoKG1lc3NhZ2UpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgcm9sZTogbWVzc2FnZS5yb2xlLFxuICAgICAgY29udGVudDogbWVzc2FnZS5jb250ZW50LFxuICAgIH07XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIkZpbmRBbGxDaGF0cyIsIlVwc2VydENoYXQiLCJNRVNTQUdFX0FUVFJJQlVURSIsIkNvc21vc0RCQ29udGFpbmVyIiwidW5pcXVlSWQiLCJDb3Ntb3NEQkNoYXRNZXNzYWdlSGlzdG9yeSIsImNvbnN0cnVjdG9yIiwic2Vzc2lvbklkIiwidXNlcklkIiwiZ2V0TWVzc2FnZXMiLCJjaGF0cyIsIm1hcE9wZW5BSUNoYXRNZXNzYWdlcyIsImNsZWFyIiwiY29udGFpbmVyIiwiZ2V0SW5zdGFuY2UiLCJnZXRDb250YWluZXIiLCJkZWxldGUiLCJhZGRNZXNzYWdlIiwibWVzc2FnZSIsImNpdGF0aW9ucyIsIm1vZGVsVG9TYXZlIiwiaWQiLCJjcmVhdGVkQXQiLCJEYXRlIiwidHlwZSIsImlzRGVsZXRlZCIsImNvbnRlbnQiLCJyb2xlIiwidGhyZWFkSWQiLCJjb250ZXh0IiwibWVzc2FnZXMiLCJtYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/cosmosdb/cosmosdb.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/models.ts":
/*!***********************************************!*\
  !*** ./features/chat/chat-services/models.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHAT_DOCUMENT_ATTRIBUTE: () => (/* binding */ CHAT_DOCUMENT_ATTRIBUTE),\n/* harmony export */   CHAT_THREAD_ATTRIBUTE: () => (/* binding */ CHAT_THREAD_ATTRIBUTE),\n/* harmony export */   MESSAGE_ATTRIBUTE: () => (/* binding */ MESSAGE_ATTRIBUTE)\n/* harmony export */ });\nconst CHAT_DOCUMENT_ATTRIBUTE = \"CHAT_DOCUMENT\";\nconst CHAT_THREAD_ATTRIBUTE = \"CHAT_THREAD\";\nconst MESSAGE_ATTRIBUTE = \"CHAT_MESSAGE\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvbW9kZWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUVPLE1BQU1BLDBCQUEwQixnQkFBZ0I7QUFDaEQsTUFBTUMsd0JBQXdCLGNBQWM7QUFDNUMsTUFBTUMsb0JBQW9CLGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9henVyZS1vcGVuLWFpLWFjY2VsZXJhdG9yLy4vZmVhdHVyZXMvY2hhdC9jaGF0LXNlcnZpY2VzL21vZGVscy50cz83NGQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiYWlcIjtcblxuZXhwb3J0IGNvbnN0IENIQVRfRE9DVU1FTlRfQVRUUklCVVRFID0gXCJDSEFUX0RPQ1VNRU5UXCI7XG5leHBvcnQgY29uc3QgQ0hBVF9USFJFQURfQVRUUklCVVRFID0gXCJDSEFUX1RIUkVBRFwiO1xuZXhwb3J0IGNvbnN0IE1FU1NBR0VfQVRUUklCVVRFID0gXCJDSEFUX01FU1NBR0VcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDaGF0TWVzc2FnZU1vZGVsIHtcbiAgaWQ6IHN0cmluZztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICBpc0RlbGV0ZWQ6IGJvb2xlYW47XG4gIHRocmVhZElkOiBzdHJpbmc7XG4gIHVzZXJJZDogc3RyaW5nO1xuICBjb250ZW50OiBzdHJpbmc7XG4gIHJvbGU6IENoYXRSb2xlO1xuICBjb250ZXh0OiBzdHJpbmc7XG4gIHR5cGU6IFwiQ0hBVF9NRVNTQUdFXCI7XG59XG5cbmV4cG9ydCB0eXBlIENvbnZlcnNhdGlvblN0eWxlID0gXCJjcmVhdGl2ZVwiIHwgXCJiYWxhbmNlZFwiIHwgXCJwcmVjaXNlXCI7XG5leHBvcnQgdHlwZSBDaGF0VHlwZSA9IFwic2ltcGxlXCIgfCBcIndlYlwiIHwgXCJkb2N1bWVudFwiIHwgXCJkYXRhXCIgfCBcImRvY1wiIHwgXCJtc3NxbFwiO1xuZXhwb3J0IHR5cGUgQ2hhdEFQSU1vZGVsID0gXCJDdXJyZW50X1ZlcnNpb25cIiB8IFwiUHJldmlld19WZXJzaW9uXCI7XG5leHBvcnQgdHlwZSBDaGF0RG9jID0gXCJEZXB0QVwiIHwgXCJEZXB0QlwiIHwgXCJEZXB0Q1wiIHwgXCJEZXB0RFwiIHwgXCJcIjtcbmV4cG9ydCB0eXBlIENoYXRBdXRoID0gXCJFeGNlY3RpdmVcIiB8IFwiTWFuYWdlclwiIHwgXCJFbXBsb3llZVwiIHwgXCJDb250cmFjdFwiO1xuZXhwb3J0IHR5cGUgQ2hhdFJvbGUgPSBcInN5c3RlbVwiIHwgXCJ1c2VyXCIgfCBcImFzc2lzdGFudFwiIHwgXCJmdW5jdGlvblwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIENoYXRUaHJlYWRNb2RlbCB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdXNlTmFtZTogc3RyaW5nO1xuICBpc0RlbGV0ZWQ6IGJvb2xlYW47XG4gIGNoYXRUeXBlOiBDaGF0VHlwZTtcbiAgY2hhdERvYzogQ2hhdERvYztcbiAgY29udmVyc2F0aW9uU3R5bGU6IENvbnZlcnNhdGlvblN0eWxlO1xuICBjaGF0QVBJTW9kZWw6IENoYXRBUElNb2RlbDtcbiAgY2hhdE92ZXJGaWxlTmFtZTogc3RyaW5nO1xuICB0eXBlOiBcIkNIQVRfVEhSRUFEXCI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvbXB0TW9kZWwge1xuICBpZDogc3RyaW5nOyBcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdXNlTmFtZTogc3RyaW5nO1xuICBpc0RlbGV0ZWQ6IGJvb2xlYW47XG4gIHRocmVhZElkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGNvbnRlbnQ6IHN0cmluZztcbiAgZGVwdDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFByb21wdEdQVEJvZHkge1xuICBpZDogc3RyaW5nOyAvLyB0aHJlYWQgaWRcbiAgY2hhdFR5cGU6IENoYXRUeXBlO1xuICBjaGF0RG9jOiBDaGF0RG9jO1xuICBjb252ZXJzYXRpb25TdHlsZTogQ29udmVyc2F0aW9uU3R5bGU7XG4gIGNoYXRBUElNb2RlbDpDaGF0QVBJTW9kZWw7XG4gIGNoYXRPdmVyRmlsZU5hbWU6IHN0cmluZztcbn1cblxuXG5leHBvcnQgaW50ZXJmYWNlIFByb21wdEdQVFByb3BzIGV4dGVuZHMgUHJvbXB0R1BUQm9keSB7XG4gIG1lc3NhZ2VzOiBNZXNzYWdlW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hhdERvY3VtZW50TW9kZWwge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIGNoYXRUaHJlYWRJZDogc3RyaW5nO1xuICB1c2VySWQ6IHN0cmluZztcbiAgaXNEZWxldGVkOiBib29sZWFuO1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHR5cGU6IFwiQ0hBVF9ET0NVTUVOVFwiO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZlckFjdGlvblJlc3BvbnNlPFQ+IHtcbiAgc3VjY2VzczogYm9vbGVhbjtcbiAgZXJyb3I6IHN0cmluZztcbiAgcmVzcG9uc2U6IFQ7XG59XG5cblxuZXhwb3J0IGludGVyZmFjZSBQcm9tcHRMaXN0IHtcbiAgaWQ6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgY29udGVudDogc3RyaW5nO1xuICBkZXB0OiBzdHJpbmc7XG4vKiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdXNlTmFtZTogc3RyaW5nO1xuICBpc0RlbGV0ZWQ6IGJvb2xlYW47Ki9cbn0iXSwibmFtZXMiOlsiQ0hBVF9ET0NVTUVOVF9BVFRSSUJVVEUiLCJDSEFUX1RIUkVBRF9BVFRSSUJVVEUiLCJNRVNTQUdFX0FUVFJJQlVURSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/models.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/text-chunk.ts":
/*!***************************************************!*\
  !*** ./features/chat/chat-services/text-chunk.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chunkDocumentWithOverlap: () => (/* binding */ chunkDocumentWithOverlap)\n/* harmony export */ });\n// Updated chunking parameters for text-embedding-3-small\nconst chunkSize = 4096; // Increased from 1000\nconst chunkOverlap = 500; // Increased from 200\n/**\n * Splits a document into chunks of specified size with overlap between chunks\n * Optimized for text-embedding-3-small model\n */ function chunkDocumentWithOverlap(document) {\n    const chunks = [];\n    if (document.length <= chunkSize) {\n        // If the document is smaller than the desired chunk size, return it as a single chunk.\n        chunks.push(document);\n        return chunks;\n    }\n    let startIndex = 0;\n    // Split the document into chunks of the desired size, with overlap.\n    while(startIndex < document.length){\n        const endIndex = Math.min(startIndex + chunkSize, document.length);\n        // Get the chunk\n        let chunk = document.substring(startIndex, endIndex);\n        // Try to end chunks at natural boundaries like paragraph or sentence endings\n        if (endIndex < document.length) {\n            // Look for paragraph breaks first\n            const paragraphBreakIndex = chunk.lastIndexOf(\"\\n\\n\");\n            // Look for single line breaks\n            const lineBreakIndex = chunk.lastIndexOf(\"\\n\");\n            // Look for sentence endings\n            const sentenceEndIndex = Math.max(chunk.lastIndexOf(\". \"), chunk.lastIndexOf(\"! \"), chunk.lastIndexOf(\"? \"));\n            // Choose the most appropriate break point that's not too far from the end\n            // Prefer paragraph breaks, then line breaks, then sentence endings\n            // Only use break points that are at least 75% into the chunk to maintain meaningful size\n            const minBreakPoint = Math.floor(chunkSize * 0.75);\n            if (paragraphBreakIndex > minBreakPoint) {\n                chunk = chunk.substring(0, paragraphBreakIndex + 2); // Include the paragraph break\n                startIndex += paragraphBreakIndex + 2;\n            } else if (lineBreakIndex > minBreakPoint) {\n                chunk = chunk.substring(0, lineBreakIndex + 1); // Include the line break\n                startIndex += lineBreakIndex + 1;\n            } else if (sentenceEndIndex > minBreakPoint) {\n                chunk = chunk.substring(0, sentenceEndIndex + 2); // Include the sentence ending and space\n                startIndex += sentenceEndIndex + 2;\n            } else {\n                // If no natural break point is found, use the original chunk\n                startIndex = endIndex - chunkOverlap;\n            }\n        } else {\n            // This is the last chunk\n            startIndex = endIndex;\n        }\n        // Add the chunk to the list\n        chunks.push(chunk);\n    }\n    return chunks;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvdGV4dC1jaHVuay50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEseURBQXlEO0FBQ3pELE1BQU1BLFlBQVksTUFBTSxzQkFBc0I7QUFDOUMsTUFBTUMsZUFBZSxLQUFLLHFCQUFxQjtBQUUvQzs7O0NBR0MsR0FDTSxTQUFTQyx5QkFBeUJDLFFBQWdCO0lBQ3ZELE1BQU1DLFNBQW1CLEVBQUU7SUFFM0IsSUFBSUQsU0FBU0UsTUFBTSxJQUFJTCxXQUFXO1FBQ2hDLHVGQUF1RjtRQUN2RkksT0FBT0UsSUFBSSxDQUFDSDtRQUNaLE9BQU9DO0lBQ1Q7SUFFQSxJQUFJRyxhQUFhO0lBRWpCLG9FQUFvRTtJQUNwRSxNQUFPQSxhQUFhSixTQUFTRSxNQUFNLENBQUU7UUFDbkMsTUFBTUcsV0FBV0MsS0FBS0MsR0FBRyxDQUFDSCxhQUFhUCxXQUFXRyxTQUFTRSxNQUFNO1FBRWpFLGdCQUFnQjtRQUNoQixJQUFJTSxRQUFRUixTQUFTUyxTQUFTLENBQUNMLFlBQVlDO1FBRTNDLDZFQUE2RTtRQUM3RSxJQUFJQSxXQUFXTCxTQUFTRSxNQUFNLEVBQUU7WUFDOUIsa0NBQWtDO1lBQ2xDLE1BQU1RLHNCQUFzQkYsTUFBTUcsV0FBVyxDQUFDO1lBQzlDLDhCQUE4QjtZQUM5QixNQUFNQyxpQkFBaUJKLE1BQU1HLFdBQVcsQ0FBQztZQUN6Qyw0QkFBNEI7WUFDNUIsTUFBTUUsbUJBQW1CUCxLQUFLUSxHQUFHLENBQy9CTixNQUFNRyxXQUFXLENBQUMsT0FDbEJILE1BQU1HLFdBQVcsQ0FBQyxPQUNsQkgsTUFBTUcsV0FBVyxDQUFDO1lBR3BCLDBFQUEwRTtZQUMxRSxtRUFBbUU7WUFDbkUseUZBQXlGO1lBQ3pGLE1BQU1JLGdCQUFnQlQsS0FBS1UsS0FBSyxDQUFDbkIsWUFBWTtZQUU3QyxJQUFJYSxzQkFBc0JLLGVBQWU7Z0JBQ3ZDUCxRQUFRQSxNQUFNQyxTQUFTLENBQUMsR0FBR0Msc0JBQXNCLElBQUksOEJBQThCO2dCQUNuRk4sY0FBY00sc0JBQXNCO1lBQ3RDLE9BQU8sSUFBSUUsaUJBQWlCRyxlQUFlO2dCQUN6Q1AsUUFBUUEsTUFBTUMsU0FBUyxDQUFDLEdBQUdHLGlCQUFpQixJQUFJLHlCQUF5QjtnQkFDekVSLGNBQWNRLGlCQUFpQjtZQUNqQyxPQUFPLElBQUlDLG1CQUFtQkUsZUFBZTtnQkFDM0NQLFFBQVFBLE1BQU1DLFNBQVMsQ0FBQyxHQUFHSSxtQkFBbUIsSUFBSSx3Q0FBd0M7Z0JBQzFGVCxjQUFjUyxtQkFBbUI7WUFDbkMsT0FBTztnQkFDTCw2REFBNkQ7Z0JBQzdEVCxhQUFhQyxXQUFXUDtZQUMxQjtRQUNGLE9BQU87WUFDTCx5QkFBeUI7WUFDekJNLGFBQWFDO1FBQ2Y7UUFFQSw0QkFBNEI7UUFDNUJKLE9BQU9FLElBQUksQ0FBQ0s7SUFDZDtJQUVBLE9BQU9QO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9henVyZS1vcGVuLWFpLWFjY2VsZXJhdG9yLy4vZmVhdHVyZXMvY2hhdC9jaGF0LXNlcnZpY2VzL3RleHQtY2h1bmsudHM/NDQ1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVcGRhdGVkIGNodW5raW5nIHBhcmFtZXRlcnMgZm9yIHRleHQtZW1iZWRkaW5nLTMtc21hbGxcbmNvbnN0IGNodW5rU2l6ZSA9IDQwOTY7IC8vIEluY3JlYXNlZCBmcm9tIDEwMDBcbmNvbnN0IGNodW5rT3ZlcmxhcCA9IDUwMDsgLy8gSW5jcmVhc2VkIGZyb20gMjAwXG5cbi8qKlxuICogU3BsaXRzIGEgZG9jdW1lbnQgaW50byBjaHVua3Mgb2Ygc3BlY2lmaWVkIHNpemUgd2l0aCBvdmVybGFwIGJldHdlZW4gY2h1bmtzXG4gKiBPcHRpbWl6ZWQgZm9yIHRleHQtZW1iZWRkaW5nLTMtc21hbGwgbW9kZWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNodW5rRG9jdW1lbnRXaXRoT3ZlcmxhcChkb2N1bWVudDogc3RyaW5nKTogc3RyaW5nW10ge1xuICBjb25zdCBjaHVua3M6IHN0cmluZ1tdID0gW107XG5cbiAgaWYgKGRvY3VtZW50Lmxlbmd0aCA8PSBjaHVua1NpemUpIHtcbiAgICAvLyBJZiB0aGUgZG9jdW1lbnQgaXMgc21hbGxlciB0aGFuIHRoZSBkZXNpcmVkIGNodW5rIHNpemUsIHJldHVybiBpdCBhcyBhIHNpbmdsZSBjaHVuay5cbiAgICBjaHVua3MucHVzaChkb2N1bWVudCk7XG4gICAgcmV0dXJuIGNodW5rcztcbiAgfVxuXG4gIGxldCBzdGFydEluZGV4ID0gMDtcblxuICAvLyBTcGxpdCB0aGUgZG9jdW1lbnQgaW50byBjaHVua3Mgb2YgdGhlIGRlc2lyZWQgc2l6ZSwgd2l0aCBvdmVybGFwLlxuICB3aGlsZSAoc3RhcnRJbmRleCA8IGRvY3VtZW50Lmxlbmd0aCkge1xuICAgIGNvbnN0IGVuZEluZGV4ID0gTWF0aC5taW4oc3RhcnRJbmRleCArIGNodW5rU2l6ZSwgZG9jdW1lbnQubGVuZ3RoKTtcbiAgICBcbiAgICAvLyBHZXQgdGhlIGNodW5rXG4gICAgbGV0IGNodW5rID0gZG9jdW1lbnQuc3Vic3RyaW5nKHN0YXJ0SW5kZXgsIGVuZEluZGV4KTtcbiAgICBcbiAgICAvLyBUcnkgdG8gZW5kIGNodW5rcyBhdCBuYXR1cmFsIGJvdW5kYXJpZXMgbGlrZSBwYXJhZ3JhcGggb3Igc2VudGVuY2UgZW5kaW5nc1xuICAgIGlmIChlbmRJbmRleCA8IGRvY3VtZW50Lmxlbmd0aCkge1xuICAgICAgLy8gTG9vayBmb3IgcGFyYWdyYXBoIGJyZWFrcyBmaXJzdFxuICAgICAgY29uc3QgcGFyYWdyYXBoQnJlYWtJbmRleCA9IGNodW5rLmxhc3RJbmRleE9mKCdcXG5cXG4nKTtcbiAgICAgIC8vIExvb2sgZm9yIHNpbmdsZSBsaW5lIGJyZWFrc1xuICAgICAgY29uc3QgbGluZUJyZWFrSW5kZXggPSBjaHVuay5sYXN0SW5kZXhPZignXFxuJyk7XG4gICAgICAvLyBMb29rIGZvciBzZW50ZW5jZSBlbmRpbmdzXG4gICAgICBjb25zdCBzZW50ZW5jZUVuZEluZGV4ID0gTWF0aC5tYXgoXG4gICAgICAgIGNodW5rLmxhc3RJbmRleE9mKCcuICcpLFxuICAgICAgICBjaHVuay5sYXN0SW5kZXhPZignISAnKSxcbiAgICAgICAgY2h1bmsubGFzdEluZGV4T2YoJz8gJylcbiAgICAgICk7XG4gICAgICBcbiAgICAgIC8vIENob29zZSB0aGUgbW9zdCBhcHByb3ByaWF0ZSBicmVhayBwb2ludCB0aGF0J3Mgbm90IHRvbyBmYXIgZnJvbSB0aGUgZW5kXG4gICAgICAvLyBQcmVmZXIgcGFyYWdyYXBoIGJyZWFrcywgdGhlbiBsaW5lIGJyZWFrcywgdGhlbiBzZW50ZW5jZSBlbmRpbmdzXG4gICAgICAvLyBPbmx5IHVzZSBicmVhayBwb2ludHMgdGhhdCBhcmUgYXQgbGVhc3QgNzUlIGludG8gdGhlIGNodW5rIHRvIG1haW50YWluIG1lYW5pbmdmdWwgc2l6ZVxuICAgICAgY29uc3QgbWluQnJlYWtQb2ludCA9IE1hdGguZmxvb3IoY2h1bmtTaXplICogMC43NSk7XG4gICAgICBcbiAgICAgIGlmIChwYXJhZ3JhcGhCcmVha0luZGV4ID4gbWluQnJlYWtQb2ludCkge1xuICAgICAgICBjaHVuayA9IGNodW5rLnN1YnN0cmluZygwLCBwYXJhZ3JhcGhCcmVha0luZGV4ICsgMik7IC8vIEluY2x1ZGUgdGhlIHBhcmFncmFwaCBicmVha1xuICAgICAgICBzdGFydEluZGV4ICs9IHBhcmFncmFwaEJyZWFrSW5kZXggKyAyO1xuICAgICAgfSBlbHNlIGlmIChsaW5lQnJlYWtJbmRleCA+IG1pbkJyZWFrUG9pbnQpIHtcbiAgICAgICAgY2h1bmsgPSBjaHVuay5zdWJzdHJpbmcoMCwgbGluZUJyZWFrSW5kZXggKyAxKTsgLy8gSW5jbHVkZSB0aGUgbGluZSBicmVha1xuICAgICAgICBzdGFydEluZGV4ICs9IGxpbmVCcmVha0luZGV4ICsgMTtcbiAgICAgIH0gZWxzZSBpZiAoc2VudGVuY2VFbmRJbmRleCA+IG1pbkJyZWFrUG9pbnQpIHtcbiAgICAgICAgY2h1bmsgPSBjaHVuay5zdWJzdHJpbmcoMCwgc2VudGVuY2VFbmRJbmRleCArIDIpOyAvLyBJbmNsdWRlIHRoZSBzZW50ZW5jZSBlbmRpbmcgYW5kIHNwYWNlXG4gICAgICAgIHN0YXJ0SW5kZXggKz0gc2VudGVuY2VFbmRJbmRleCArIDI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBJZiBubyBuYXR1cmFsIGJyZWFrIHBvaW50IGlzIGZvdW5kLCB1c2UgdGhlIG9yaWdpbmFsIGNodW5rXG4gICAgICAgIHN0YXJ0SW5kZXggPSBlbmRJbmRleCAtIGNodW5rT3ZlcmxhcDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVGhpcyBpcyB0aGUgbGFzdCBjaHVua1xuICAgICAgc3RhcnRJbmRleCA9IGVuZEluZGV4O1xuICAgIH1cbiAgICBcbiAgICAvLyBBZGQgdGhlIGNodW5rIHRvIHRoZSBsaXN0XG4gICAgY2h1bmtzLnB1c2goY2h1bmspO1xuICB9XG5cbiAgcmV0dXJuIGNodW5rcztcbn0iXSwibmFtZXMiOlsiY2h1bmtTaXplIiwiY2h1bmtPdmVybGFwIiwiY2h1bmtEb2N1bWVudFdpdGhPdmVybGFwIiwiZG9jdW1lbnQiLCJjaHVua3MiLCJsZW5ndGgiLCJwdXNoIiwic3RhcnRJbmRleCIsImVuZEluZGV4IiwiTWF0aCIsIm1pbiIsImNodW5rIiwic3Vic3RyaW5nIiwicGFyYWdyYXBoQnJlYWtJbmRleCIsImxhc3RJbmRleE9mIiwibGluZUJyZWFrSW5kZXgiLCJzZW50ZW5jZUVuZEluZGV4IiwibWF4IiwibWluQnJlYWtQb2ludCIsImZsb29yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/text-chunk.ts\n");

/***/ }),

/***/ "(rsc)/./features/chat/chat-services/utils.ts":
/*!**********************************************!*\
  !*** ./features/chat/chat-services/utils.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNotNullOrEmpty: () => (/* binding */ isNotNullOrEmpty),\n/* harmony export */   transformConversationStyleToTemperature: () => (/* binding */ transformConversationStyleToTemperature),\n/* harmony export */   transformCosmosToAIModel: () => (/* binding */ transformCosmosToAIModel)\n/* harmony export */ });\nconst transformCosmosToAIModel = (chats)=>{\n    return chats.map((chat)=>{\n        return {\n            role: chat.role,\n            content: chat.content,\n            id: chat.id,\n            createdAt: chat.createdAt\n        };\n    });\n};\nconst transformConversationStyleToTemperature = (conversationStyle)=>{\n    switch(conversationStyle){\n        case \"precise\":\n            return 0.1;\n        case \"balanced\":\n            return 0.5;\n        case \"creative\":\n            return 1;\n        default:\n            return 0.5;\n    }\n};\nconst isNotNullOrEmpty = (value)=>{\n    return value !== null && value !== undefined && value !== \"\";\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jaGF0L2NoYXQtc2VydmljZXMvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBR08sTUFBTUEsMkJBQTJCLENBQ3RDQztJQUVBLE9BQU9BLE1BQU1DLEdBQUcsQ0FBQyxDQUFDQztRQUNoQixPQUFPO1lBQ0xDLE1BQU1ELEtBQUtDLElBQUk7WUFDZkMsU0FBU0YsS0FBS0UsT0FBTztZQUNyQkMsSUFBSUgsS0FBS0csRUFBRTtZQUNYQyxXQUFXSixLQUFLSSxTQUFTO1FBQzNCO0lBQ0Y7QUFDRixFQUFFO0FBRUssTUFBTUMsMENBQTBDLENBQ3JEQztJQUVBLE9BQVFBO1FBQ04sS0FBSztZQUNILE9BQU87UUFDVCxLQUFLO1lBQ0gsT0FBTztRQUNULEtBQUs7WUFDSCxPQUFPO1FBQ1Q7WUFDRSxPQUFPO0lBQ1g7QUFDRixFQUFFO0FBRUssTUFBTUMsbUJBQW1CLENBQUNDO0lBQy9CLE9BQU9BLFVBQVUsUUFBUUEsVUFBVUMsYUFBYUQsVUFBVTtBQUM1RCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXp1cmUtb3Blbi1haS1hY2NlbGVyYXRvci8uL2ZlYXR1cmVzL2NoYXQvY2hhdC1zZXJ2aWNlcy91dGlscy50cz9jNzQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiYWlcIjtcbmltcG9ydCB7IENoYXRNZXNzYWdlTW9kZWwsIENvbnZlcnNhdGlvblN0eWxlIH0gZnJvbSBcIi4vbW9kZWxzXCI7XG5cbmV4cG9ydCBjb25zdCB0cmFuc2Zvcm1Db3Ntb3NUb0FJTW9kZWwgPSAoXG4gIGNoYXRzOiBBcnJheTxDaGF0TWVzc2FnZU1vZGVsPlxuKTogQXJyYXk8TWVzc2FnZT4gPT4ge1xuICByZXR1cm4gY2hhdHMubWFwKChjaGF0KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvbGU6IGNoYXQucm9sZSxcbiAgICAgIGNvbnRlbnQ6IGNoYXQuY29udGVudCxcbiAgICAgIGlkOiBjaGF0LmlkLFxuICAgICAgY3JlYXRlZEF0OiBjaGF0LmNyZWF0ZWRBdCxcbiAgICB9O1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCB0cmFuc2Zvcm1Db252ZXJzYXRpb25TdHlsZVRvVGVtcGVyYXR1cmUgPSAoXG4gIGNvbnZlcnNhdGlvblN0eWxlOiBDb252ZXJzYXRpb25TdHlsZVxuKSA9PiB7XG4gIHN3aXRjaCAoY29udmVyc2F0aW9uU3R5bGUpIHtcbiAgICBjYXNlIFwicHJlY2lzZVwiOlxuICAgICAgcmV0dXJuIDAuMTtcbiAgICBjYXNlIFwiYmFsYW5jZWRcIjpcbiAgICAgIHJldHVybiAwLjU7XG4gICAgY2FzZSBcImNyZWF0aXZlXCI6XG4gICAgICByZXR1cm4gMTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIDAuNTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGlzTm90TnVsbE9yRW1wdHkgPSAodmFsdWU/OiBzdHJpbmcpID0+IHtcbiAgcmV0dXJuIHZhbHVlICE9PSBudWxsICYmIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IFwiXCI7XG59O1xuIl0sIm5hbWVzIjpbInRyYW5zZm9ybUNvc21vc1RvQUlNb2RlbCIsImNoYXRzIiwibWFwIiwiY2hhdCIsInJvbGUiLCJjb250ZW50IiwiaWQiLCJjcmVhdGVkQXQiLCJ0cmFuc2Zvcm1Db252ZXJzYXRpb25TdHlsZVRvVGVtcGVyYXR1cmUiLCJjb252ZXJzYXRpb25TdHlsZSIsImlzTm90TnVsbE9yRW1wdHkiLCJ2YWx1ZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./features/chat/chat-services/utils.ts\n");

/***/ }),

/***/ "(rsc)/./features/common/cosmos.ts":
/*!***********************************!*\
  !*** ./features/common/cosmos.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmosDBContainer: () => (/* binding */ CosmosDBContainer),\n/* harmony export */   initDBContainer: () => (/* binding */ initDBContainer)\n/* harmony export */ });\n/* harmony import */ var _azure_cosmos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/cosmos */ \"(rsc)/./node_modules/@azure/cosmos/dist-esm/src/CosmosClient.js\");\n\n// Read Cosmos DB_NAME and CONTAINER_NAME from .env\nconst DB_NAME = process.env.AZURE_COSMOSDB_DB_NAME || \"chat\";\nconst CONTAINER_NAME = process.env.AZURE_COSMOSDB_CONTAINER_NAME || \"history\";\nconst initDBContainer = async ()=>{\n    const endpoint = process.env.AZURE_COSMOSDB_URI;\n    const key = process.env.AZURE_COSMOSDB_KEY;\n    const client = new _azure_cosmos__WEBPACK_IMPORTED_MODULE_0__.CosmosClient({\n        endpoint,\n        key\n    });\n    const databaseResponse = await client.databases.createIfNotExists({\n        id: DB_NAME\n    });\n    const containerResponse = await databaseResponse.database.containers.createIfNotExists({\n        id: CONTAINER_NAME,\n        partitionKey: {\n            paths: [\n                \"/userId\"\n            ]\n        }\n    });\n    return containerResponse.container;\n};\nclass CosmosDBContainer {\n    constructor(){\n        const endpoint = process.env.AZURE_COSMOSDB_URI;\n        const key = process.env.AZURE_COSMOSDB_KEY;\n        const client = new _azure_cosmos__WEBPACK_IMPORTED_MODULE_0__.CosmosClient({\n            endpoint,\n            key\n        });\n        this.container = new Promise((resolve, reject)=>{\n            client.databases.createIfNotExists({\n                id: DB_NAME\n            }).then((databaseResponse)=>{\n                databaseResponse.database.containers.createIfNotExists({\n                    id: CONTAINER_NAME,\n                    partitionKey: {\n                        paths: [\n                            \"/userId\"\n                        ]\n                    }\n                }).then((containerResponse)=>{\n                    resolve(containerResponse.container);\n                });\n            }).catch((err)=>{\n                reject(err);\n            });\n        });\n    }\n    static getInstance() {\n        if (!CosmosDBContainer.instance) {\n            CosmosDBContainer.instance = new CosmosDBContainer();\n        }\n        return CosmosDBContainer.instance;\n    }\n    async getContainer() {\n        return await this.container;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jb21tb24vY29zbW9zLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RDtBQUV4RCxtREFBbUQ7QUFDbkQsTUFBTUMsVUFBVUMsUUFBUUMsR0FBRyxDQUFDQyxzQkFBc0IsSUFBSTtBQUN0RCxNQUFNQyxpQkFBaUJILFFBQVFDLEdBQUcsQ0FBQ0csNkJBQTZCLElBQUk7QUFFN0QsTUFBTUMsa0JBQWtCO0lBQzdCLE1BQU1DLFdBQVdOLFFBQVFDLEdBQUcsQ0FBQ00sa0JBQWtCO0lBQy9DLE1BQU1DLE1BQU1SLFFBQVFDLEdBQUcsQ0FBQ1Esa0JBQWtCO0lBRTFDLE1BQU1DLFNBQVMsSUFBSVosdURBQVlBLENBQUM7UUFBRVE7UUFBVUU7SUFBSTtJQUVoRCxNQUFNRyxtQkFBbUIsTUFBTUQsT0FBT0UsU0FBUyxDQUFDQyxpQkFBaUIsQ0FBQztRQUNoRUMsSUFBSWY7SUFDTjtJQUVBLE1BQU1nQixvQkFDSixNQUFNSixpQkFBaUJLLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDSixpQkFBaUIsQ0FBQztRQUMzREMsSUFBSVg7UUFDSmUsY0FBYztZQUNaQyxPQUFPO2dCQUFDO2FBQVU7UUFDcEI7SUFDRjtJQUVGLE9BQU9KLGtCQUFrQkssU0FBUztBQUNwQyxFQUFFO0FBRUssTUFBTUM7SUFJWCxhQUFzQjtRQUNwQixNQUFNZixXQUFXTixRQUFRQyxHQUFHLENBQUNNLGtCQUFrQjtRQUMvQyxNQUFNQyxNQUFNUixRQUFRQyxHQUFHLENBQUNRLGtCQUFrQjtRQUUxQyxNQUFNQyxTQUFTLElBQUlaLHVEQUFZQSxDQUFDO1lBQUVRO1lBQVVFO1FBQUk7UUFFaEQsSUFBSSxDQUFDWSxTQUFTLEdBQUcsSUFBSUUsUUFBUSxDQUFDQyxTQUFTQztZQUNyQ2QsT0FBT0UsU0FBUyxDQUNiQyxpQkFBaUIsQ0FBQztnQkFDakJDLElBQUlmO1lBQ04sR0FDQzBCLElBQUksQ0FBQyxDQUFDZDtnQkFDTEEsaUJBQWlCSyxRQUFRLENBQUNDLFVBQVUsQ0FDakNKLGlCQUFpQixDQUFDO29CQUNqQkMsSUFBSVg7b0JBQ0plLGNBQWM7d0JBQ1pDLE9BQU87NEJBQUM7eUJBQVU7b0JBQ3BCO2dCQUNGLEdBQ0NNLElBQUksQ0FBQyxDQUFDVjtvQkFDTFEsUUFBUVIsa0JBQWtCSyxTQUFTO2dCQUNyQztZQUNKLEdBQ0NNLEtBQUssQ0FBQyxDQUFDQztnQkFDTkgsT0FBT0c7WUFDVDtRQUNKO0lBQ0Y7SUFFQSxPQUFjQyxjQUFpQztRQUM3QyxJQUFJLENBQUNQLGtCQUFrQlEsUUFBUSxFQUFFO1lBQy9CUixrQkFBa0JRLFFBQVEsR0FBRyxJQUFJUjtRQUNuQztRQUVBLE9BQU9BLGtCQUFrQlEsUUFBUTtJQUNuQztJQUVBLE1BQWFDLGVBQW1DO1FBQzlDLE9BQU8sTUFBTSxJQUFJLENBQUNWLFNBQVM7SUFDN0I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2F6dXJlLW9wZW4tYWktYWNjZWxlcmF0b3IvLi9mZWF0dXJlcy9jb21tb24vY29zbW9zLnRzPzU4MmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGFpbmVyLCBDb3Ntb3NDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2Nvc21vc1wiO1xuXG4vLyBSZWFkIENvc21vcyBEQl9OQU1FIGFuZCBDT05UQUlORVJfTkFNRSBmcm9tIC5lbnZcbmNvbnN0IERCX05BTUUgPSBwcm9jZXNzLmVudi5BWlVSRV9DT1NNT1NEQl9EQl9OQU1FIHx8IFwiY2hhdFwiO1xuY29uc3QgQ09OVEFJTkVSX05BTUUgPSBwcm9jZXNzLmVudi5BWlVSRV9DT1NNT1NEQl9DT05UQUlORVJfTkFNRSB8fCBcImhpc3RvcnlcIjtcblxuZXhwb3J0IGNvbnN0IGluaXREQkNvbnRhaW5lciA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgZW5kcG9pbnQgPSBwcm9jZXNzLmVudi5BWlVSRV9DT1NNT1NEQl9VUkk7XG4gIGNvbnN0IGtleSA9IHByb2Nlc3MuZW52LkFaVVJFX0NPU01PU0RCX0tFWTtcblxuICBjb25zdCBjbGllbnQgPSBuZXcgQ29zbW9zQ2xpZW50KHsgZW5kcG9pbnQsIGtleSB9KTtcblxuICBjb25zdCBkYXRhYmFzZVJlc3BvbnNlID0gYXdhaXQgY2xpZW50LmRhdGFiYXNlcy5jcmVhdGVJZk5vdEV4aXN0cyh7XG4gICAgaWQ6IERCX05BTUUsXG4gIH0pO1xuXG4gIGNvbnN0IGNvbnRhaW5lclJlc3BvbnNlID1cbiAgICBhd2FpdCBkYXRhYmFzZVJlc3BvbnNlLmRhdGFiYXNlLmNvbnRhaW5lcnMuY3JlYXRlSWZOb3RFeGlzdHMoe1xuICAgICAgaWQ6IENPTlRBSU5FUl9OQU1FLFxuICAgICAgcGFydGl0aW9uS2V5OiB7XG4gICAgICAgIHBhdGhzOiBbXCIvdXNlcklkXCJdLFxuICAgICAgfSxcbiAgICB9KTtcblxuICByZXR1cm4gY29udGFpbmVyUmVzcG9uc2UuY29udGFpbmVyO1xufTtcblxuZXhwb3J0IGNsYXNzIENvc21vc0RCQ29udGFpbmVyIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IENvc21vc0RCQ29udGFpbmVyO1xuICBwcml2YXRlIGNvbnRhaW5lcjogUHJvbWlzZTxDb250YWluZXI+O1xuXG4gIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBwcm9jZXNzLmVudi5BWlVSRV9DT1NNT1NEQl9VUkk7XG4gICAgY29uc3Qga2V5ID0gcHJvY2Vzcy5lbnYuQVpVUkVfQ09TTU9TREJfS0VZO1xuXG4gICAgY29uc3QgY2xpZW50ID0gbmV3IENvc21vc0NsaWVudCh7IGVuZHBvaW50LCBrZXkgfSk7XG5cbiAgICB0aGlzLmNvbnRhaW5lciA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNsaWVudC5kYXRhYmFzZXNcbiAgICAgICAgLmNyZWF0ZUlmTm90RXhpc3RzKHtcbiAgICAgICAgICBpZDogREJfTkFNRSxcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKGRhdGFiYXNlUmVzcG9uc2UpID0+IHtcbiAgICAgICAgICBkYXRhYmFzZVJlc3BvbnNlLmRhdGFiYXNlLmNvbnRhaW5lcnNcbiAgICAgICAgICAgIC5jcmVhdGVJZk5vdEV4aXN0cyh7XG4gICAgICAgICAgICAgIGlkOiBDT05UQUlORVJfTkFNRSxcbiAgICAgICAgICAgICAgcGFydGl0aW9uS2V5OiB7XG4gICAgICAgICAgICAgICAgcGF0aHM6IFtcIi91c2VySWRcIl0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oKGNvbnRhaW5lclJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgIHJlc29sdmUoY29udGFpbmVyUmVzcG9uc2UuY29udGFpbmVyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogQ29zbW9zREJDb250YWluZXIge1xuICAgIGlmICghQ29zbW9zREJDb250YWluZXIuaW5zdGFuY2UpIHtcbiAgICAgIENvc21vc0RCQ29udGFpbmVyLmluc3RhbmNlID0gbmV3IENvc21vc0RCQ29udGFpbmVyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIENvc21vc0RCQ29udGFpbmVyLmluc3RhbmNlO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIGdldENvbnRhaW5lcigpOiBQcm9taXNlPENvbnRhaW5lcj4ge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmNvbnRhaW5lcjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkNvc21vc0NsaWVudCIsIkRCX05BTUUiLCJwcm9jZXNzIiwiZW52IiwiQVpVUkVfQ09TTU9TREJfREJfTkFNRSIsIkNPTlRBSU5FUl9OQU1FIiwiQVpVUkVfQ09TTU9TREJfQ09OVEFJTkVSX05BTUUiLCJpbml0REJDb250YWluZXIiLCJlbmRwb2ludCIsIkFaVVJFX0NPU01PU0RCX1VSSSIsImtleSIsIkFaVVJFX0NPU01PU0RCX0tFWSIsImNsaWVudCIsImRhdGFiYXNlUmVzcG9uc2UiLCJkYXRhYmFzZXMiLCJjcmVhdGVJZk5vdEV4aXN0cyIsImlkIiwiY29udGFpbmVyUmVzcG9uc2UiLCJkYXRhYmFzZSIsImNvbnRhaW5lcnMiLCJwYXJ0aXRpb25LZXkiLCJwYXRocyIsImNvbnRhaW5lciIsIkNvc21vc0RCQ29udGFpbmVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0aGVuIiwiY2F0Y2giLCJlcnIiLCJnZXRJbnN0YW5jZSIsImluc3RhbmNlIiwiZ2V0Q29udGFpbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./features/common/cosmos.ts\n");

/***/ }),

/***/ "(rsc)/./features/common/openai.ts":
/*!***********************************!*\
  !*** ./features/common/openai.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAIEmbeddingInstance: () => (/* binding */ OpenAIEmbeddingInstance),\n/* harmony export */   OpenAIInstance: () => (/* binding */ OpenAIInstance)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\nconst OpenAIInstance = ()=>{\n    const openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAI({\n        apiKey: process.env.OPENAI_API_KEY,\n        baseURL: `https://${process.env.AZURE_OPENAI_API_INSTANCE_NAME}.openai.azure.com/openai/deployments/${process.env.AZURE_OPENAI_API_DEPLOYMENT_NAME}`,\n        defaultQuery: {\n            \"api-version\": process.env.AZURE_OPENAI_API_VERSION\n        },\n        defaultHeaders: {\n            \"api-key\": process.env.OPENAI_API_KEY\n        }\n    });\n    return openai;\n};\nconst OpenAIEmbeddingInstance = ()=>{\n    const openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAI({\n        apiKey: process.env.OPENAI_API_KEY,\n        baseURL: `https://${process.env.AZURE_OPENAI_API_INSTANCE_NAME}.openai.azure.com/openai/deployments/${process.env.AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME}`,\n        defaultQuery: {\n            \"api-version\": process.env.AZURE_OPENAI_API_VERSION\n        },\n        defaultHeaders: {\n            \"api-key\": process.env.OPENAI_API_KEY\n        }\n    });\n    return openai;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jb21tb24vb3BlbmFpLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUl6QixNQUFNQyxpQkFBaUI7SUFHNUIsTUFBTUMsU0FBUyxJQUFJRiwwQ0FBTUEsQ0FBQztRQUN4QkcsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO1FBQ2xDQyxTQUFTLENBQUMsUUFBUSxFQUFFSCxRQUFRQyxHQUFHLENBQUNHLDhCQUE4QixDQUFDLHFDQUFxQyxFQUFFSixRQUFRQyxHQUFHLENBQUNJLGdDQUFnQyxDQUFDLENBQUM7UUFDcEpDLGNBQWM7WUFBRSxlQUFlTixRQUFRQyxHQUFHLENBQUNNLHdCQUF3QjtRQUFDO1FBQ3BFQyxnQkFBZ0I7WUFBRSxXQUFXUixRQUFRQyxHQUFHLENBQUNDLGNBQWM7UUFBQztJQUMxRDtJQUNBLE9BQU9KO0FBQ1QsRUFBRTtBQUVLLE1BQU1XLDBCQUEwQjtJQUNyQyxNQUFNWCxTQUFTLElBQUlGLDBDQUFNQSxDQUFDO1FBQ3hCRyxRQUFRQyxRQUFRQyxHQUFHLENBQUNDLGNBQWM7UUFDbENDLFNBQVMsQ0FBQyxRQUFRLEVBQUVILFFBQVFDLEdBQUcsQ0FBQ0csOEJBQThCLENBQUMscUNBQXFDLEVBQUVKLFFBQVFDLEdBQUcsQ0FBQ1MsMkNBQTJDLENBQUMsQ0FBQztRQUMvSkosY0FBYztZQUFFLGVBQWVOLFFBQVFDLEdBQUcsQ0FBQ00sd0JBQXdCO1FBQUM7UUFDcEVDLGdCQUFnQjtZQUFFLFdBQVdSLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYztRQUFDO0lBQzFEO0lBQ0EsT0FBT0o7QUFDVCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXp1cmUtb3Blbi1haS1hY2NlbGVyYXRvci8uL2ZlYXR1cmVzL2NvbW1vbi9vcGVuYWkudHM/YmJlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcGVuQUkgfSBmcm9tIFwib3BlbmFpXCI7XG5cbmltcG9ydCB7IFByb21wdEdQVFByb3BzIH0gZnJvbSBcIi4uL2NoYXQvY2hhdC1zZXJ2aWNlcy9tb2RlbHNcIjtcblxuZXhwb3J0IGNvbnN0IE9wZW5BSUluc3RhbmNlID0gKCkgPT4ge1xuXG4gICAgXG4gIGNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUkoe1xuICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXG4gICAgYmFzZVVSTDogYGh0dHBzOi8vJHtwcm9jZXNzLmVudi5BWlVSRV9PUEVOQUlfQVBJX0lOU1RBTkNFX05BTUV9Lm9wZW5haS5henVyZS5jb20vb3BlbmFpL2RlcGxveW1lbnRzLyR7cHJvY2Vzcy5lbnYuQVpVUkVfT1BFTkFJX0FQSV9ERVBMT1lNRU5UX05BTUV9YCxcbiAgICBkZWZhdWx0UXVlcnk6IHsgXCJhcGktdmVyc2lvblwiOiBwcm9jZXNzLmVudi5BWlVSRV9PUEVOQUlfQVBJX1ZFUlNJT04gfSxcbiAgICBkZWZhdWx0SGVhZGVyczogeyBcImFwaS1rZXlcIjogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVkgfSxcbiAgfSk7XG4gIHJldHVybiBvcGVuYWk7XG59O1xuXG5leHBvcnQgY29uc3QgT3BlbkFJRW1iZWRkaW5nSW5zdGFuY2UgPSAoKSA9PiB7XG4gIGNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUkoe1xuICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXG4gICAgYmFzZVVSTDogYGh0dHBzOi8vJHtwcm9jZXNzLmVudi5BWlVSRV9PUEVOQUlfQVBJX0lOU1RBTkNFX05BTUV9Lm9wZW5haS5henVyZS5jb20vb3BlbmFpL2RlcGxveW1lbnRzLyR7cHJvY2Vzcy5lbnYuQVpVUkVfT1BFTkFJX0FQSV9FTUJFRERJTkdTX0RFUExPWU1FTlRfTkFNRX1gLFxuICAgIGRlZmF1bHRRdWVyeTogeyBcImFwaS12ZXJzaW9uXCI6IHByb2Nlc3MuZW52LkFaVVJFX09QRU5BSV9BUElfVkVSU0lPTiB9LFxuICAgIGRlZmF1bHRIZWFkZXJzOiB7IFwiYXBpLWtleVwiOiBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSB9LFxuICB9KTtcbiAgcmV0dXJuIG9wZW5haTtcbn07XG4iXSwibmFtZXMiOlsiT3BlbkFJIiwiT3BlbkFJSW5zdGFuY2UiLCJvcGVuYWkiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiT1BFTkFJX0FQSV9LRVkiLCJiYXNlVVJMIiwiQVpVUkVfT1BFTkFJX0FQSV9JTlNUQU5DRV9OQU1FIiwiQVpVUkVfT1BFTkFJX0FQSV9ERVBMT1lNRU5UX05BTUUiLCJkZWZhdWx0UXVlcnkiLCJBWlVSRV9PUEVOQUlfQVBJX1ZFUlNJT04iLCJkZWZhdWx0SGVhZGVycyIsIk9wZW5BSUVtYmVkZGluZ0luc3RhbmNlIiwiQVpVUkVfT1BFTkFJX0FQSV9FTUJFRERJTkdTX0RFUExPWU1FTlRfTkFNRSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./features/common/openai.ts\n");

/***/ }),

/***/ "(rsc)/./features/common/util.ts":
/*!*********************************!*\
  !*** ./features/common/util.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uniqueId: () => (/* binding */ uniqueId)\n/* harmony export */ });\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid */ \"(rsc)/./node_modules/nanoid/index.js\");\n\nconst uniqueId = ()=>{\n    const alphabet = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    const nanoid = (0,nanoid__WEBPACK_IMPORTED_MODULE_0__.customAlphabet)(alphabet, 36);\n    return nanoid();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy9jb21tb24vdXRpbC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUVqQyxNQUFNQyxXQUFXO0lBQ3RCLE1BQU1DLFdBQ0o7SUFDRixNQUFNQyxTQUFTSCxzREFBY0EsQ0FBQ0UsVUFBVTtJQUN4QyxPQUFPQztBQUNULEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9henVyZS1vcGVuLWFpLWFjY2VsZXJhdG9yLy4vZmVhdHVyZXMvY29tbW9uL3V0aWwudHM/YzE4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjdXN0b21BbHBoYWJldCB9IGZyb20gXCJuYW5vaWRcIjtcblxuZXhwb3J0IGNvbnN0IHVuaXF1ZUlkID0gKCkgPT4ge1xuICBjb25zdCBhbHBoYWJldCA9XG4gICAgXCIwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5elwiO1xuICBjb25zdCBuYW5vaWQgPSBjdXN0b21BbHBoYWJldChhbHBoYWJldCwgMzYpO1xuICByZXR1cm4gbmFub2lkKCk7XG59O1xuIl0sIm5hbWVzIjpbImN1c3RvbUFscGhhYmV0IiwidW5pcXVlSWQiLCJhbHBoYWJldCIsIm5hbm9pZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./features/common/util.ts\n");

/***/ }),

/***/ "(rsc)/./features/theme/customise.ts":
/*!*************************************!*\
  !*** ./features/theme/customise.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AI_NAME: () => (/* binding */ AI_NAME)\n/* harmony export */ });\nconst AI_NAME = \" Fujibo ChatGPT\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9mZWF0dXJlcy90aGVtZS9jdXN0b21pc2UudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFVBQVUsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXp1cmUtb3Blbi1haS1hY2NlbGVyYXRvci8uL2ZlYXR1cmVzL3RoZW1lL2N1c3RvbWlzZS50cz85YTIzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBSV9OQU1FID0gXCIgRnVqaWJvIENoYXRHUFRcIjtcbiJdLCJuYW1lcyI6WyJBSV9OQU1FIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./features/theme/customise.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/formdata-node","vendor-chunks/next-auth","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/@babel","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/preact-render-to-string","vendor-chunks/uuid","vendor-chunks/yallist","vendor-chunks/lru-cache","vendor-chunks/cookie","vendor-chunks/oidc-token-hash","vendor-chunks/@panva","vendor-chunks/@azure","vendor-chunks/tr46","vendor-chunks/web-streams-polyfill","vendor-chunks/openai","vendor-chunks/node-fetch","vendor-chunks/whatwg-url","vendor-chunks/jsbi","vendor-chunks/tslib","vendor-chunks/debug","vendor-chunks/event-target-shim","vendor-chunks/https-proxy-agent","vendor-chunks/agentkeepalive","vendor-chunks/http-proxy-agent","vendor-chunks/form-data-encoder","vendor-chunks/webidl-conversions","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/priorityqueuejs","vendor-chunks/abort-controller","vendor-chunks/semaphore","vendor-chunks/fast-json-stable-stringify","vendor-chunks/nanoid","vendor-chunks/has-flag","vendor-chunks/humanize-ms","vendor-chunks/ai","vendor-chunks/eventsource-parser"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fokamotonobuhiro%2Ffujibo2025%2Ftest%2Fsrc&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();